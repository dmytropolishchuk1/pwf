{"ast":null,"code":"import React from\"react\";import{useState,useEffect}from\"react\";import{useParams,useNavigate}from'react-router-dom';import io from'socket.io-client';import{v4 as uuidv4}from'uuid';import twoSpades from\"./assets/cards/SPADES_2.svg\";import threeSpades from\"./assets/cards/SPADES_3.svg\";import fourSpades from\"./assets/cards/SPADES_4.svg\";import fiveSpades from\"./assets/cards/SPADES_5.svg\";import sixSpades from\"./assets/cards/SPADES_6.svg\";import sevenSpades from\"./assets/cards/SPADES_7.svg\";import eightSpades from\"./assets/cards/SPADES_8.svg\";import nineSpades from\"./assets/cards/SPADES_9.svg\";import tenSpades from\"./assets/cards/SPADES_10.svg\";import jackSpades from\"./assets/cards/SPADES_J.svg\";import queenSpades from\"./assets/cards/SPADES_Q.svg\";import kingSpades from\"./assets/cards/SPADES_K.svg\";import aceSpades from\"./assets/cards/SPADES_A.svg\";import twoHearts from\"./assets/cards/HEARTS_2.svg\";import threeHearts from\"./assets/cards/HEARTS_3.svg\";import fourHearts from\"./assets/cards/HEARTS_4.svg\";import fiveHearts from\"./assets/cards/HEARTS_5.svg\";import sixHearts from\"./assets/cards/HEARTS_6.svg\";import sevenHearts from\"./assets/cards/HEARTS_7.svg\";import eightHearts from\"./assets/cards/HEARTS_8.svg\";import nineHearts from\"./assets/cards/HEARTS_9.svg\";import tenHearts from\"./assets/cards/HEARTS_10.svg\";import jackHearts from\"./assets/cards/HEARTS_J.svg\";import queenHearts from\"./assets/cards/HEARTS_Q.svg\";import kingHearts from\"./assets/cards/HEARTS_K.svg\";import aceHearts from\"./assets/cards/HEARTS_A.svg\";import twoDiamonds from\"./assets/cards/DIAMONDS_2.svg\";import threeDiamonds from\"./assets/cards/DIAMONDS_3.svg\";import fourDiamonds from\"./assets/cards/DIAMONDS_4.svg\";import fiveDiamonds from\"./assets/cards/DIAMONDS_5.svg\";import sixDiamonds from\"./assets/cards/DIAMONDS_6.svg\";import sevenDiamonds from\"./assets/cards/DIAMONDS_7.svg\";import eightDiamonds from\"./assets/cards/DIAMONDS_8.svg\";import nineDiamonds from\"./assets/cards/DIAMONDS_9.svg\";import tenDiamonds from\"./assets/cards/DIAMONDS_10.svg\";import jackDiamonds from\"./assets/cards/DIAMONDS_J.svg\";import queenDiamonds from\"./assets/cards/DIAMONDS_Q.svg\";import kingDiamonds from\"./assets/cards/DIAMONDS_K.svg\";import aceDiamonds from\"./assets/cards/DIAMONDS_A.svg\";import twoClubs from\"./assets/cards/CLUBS_2.svg\";import threeClubs from\"./assets/cards/CLUBS_3.svg\";import fourClubs from\"./assets/cards/CLUBS_4.svg\";import fiveClubs from\"./assets/cards/CLUBS_5.svg\";import sixClubs from\"./assets/cards/CLUBS_6.svg\";import sevenClubs from\"./assets/cards/CLUBS_7.svg\";import eightClubs from\"./assets/cards/CLUBS_8.svg\";import nineClubs from\"./assets/cards/CLUBS_9.svg\";import tenClubs from\"./assets/cards/CLUBS_10.svg\";import jackClubs from\"./assets/cards/CLUBS_J.svg\";import queenClubs from\"./assets/cards/CLUBS_Q.svg\";import kingClubs from\"./assets/cards/CLUBS_K.svg\";import aceClubs from\"./assets/cards/CLUBS_A.svg\";import cardBack from\"./assets/cards/BACK.svg\";import betSound from\"./assets/betSound.mp3\";import checkSound from\"./assets/checkSound.mp3\";import foldSound from\"./assets/foldSound.mp3\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const SERVER_URL=\"https://pwfpwfpwf-3f02d2a899b2.herokuapp.com/\";const socket=io(SERVER_URL);function Game(){const cardImages={\"two_spades\":twoSpades,\"three_spades\":threeSpades,\"four_spades\":fourSpades,\"five_spades\":fiveSpades,\"six_spades\":sixSpades,\"seven_spades\":sevenSpades,\"eight_spades\":eightSpades,\"nine_spades\":nineSpades,\"ten_spades\":tenSpades,\"jack_spades\":jackSpades,\"queen_spades\":queenSpades,\"king_spades\":kingSpades,\"ace_spades\":aceSpades,\"two_hearts\":twoHearts,\"three_hearts\":threeHearts,\"four_hearts\":fourHearts,\"five_hearts\":fiveHearts,\"six_hearts\":sixHearts,\"seven_hearts\":sevenHearts,\"eight_hearts\":eightHearts,\"nine_hearts\":nineHearts,\"ten_hearts\":tenHearts,\"jack_hearts\":jackHearts,\"queen_hearts\":queenHearts,\"king_hearts\":kingHearts,\"ace_hearts\":aceHearts,\"two_diamonds\":twoDiamonds,\"three_diamonds\":threeDiamonds,\"four_diamonds\":fourDiamonds,\"five_diamonds\":fiveDiamonds,\"six_diamonds\":sixDiamonds,\"seven_diamonds\":sevenDiamonds,\"eight_diamonds\":eightDiamonds,\"nine_diamonds\":nineDiamonds,\"ten_diamonds\":tenDiamonds,\"jack_diamonds\":jackDiamonds,\"queen_diamonds\":queenDiamonds,\"king_diamonds\":kingDiamonds,\"ace_diamonds\":aceDiamonds,\"two_clubs\":twoClubs,\"three_clubs\":threeClubs,\"four_clubs\":fourClubs,\"five_clubs\":fiveClubs,\"six_clubs\":sixClubs,\"seven_clubs\":sevenClubs,\"eight_clubs\":eightClubs,\"nine_clubs\":nineClubs,\"ten_clubs\":tenClubs,\"jack_clubs\":jackClubs,\"queen_clubs\":queenClubs,\"king_clubs\":kingClubs,\"ace_clubs\":aceClubs};const[playersInGame,setPlayersInGame]=useState([]);const[playerId,setPlayerId]=useState([]);const[gameState,setGameState]=useState(null);const{gameId}=useParams();// Get gameId from URL parameters\nconst navigate=useNavigate();const[playerHand,setPlayerHand]=useState([]);const[tableCards,setTableCards]=useState([]);// If you plan to handle flop, turn, river updates\nconst[isTurn,setIsTurn]=useState(false);const[gameStatus,setGameStatus]=useState('');const[gameStarted,setGameStarted]=useState(false);const[playerMoney,setPlayerMoney]=useState(0);// Initialize with default 1000 chips\nconst[turnCount,setTurnCount]=useState(0);const[turnCount2,setTurnCount2]=useState(0);const[turnCount3,setTurnCount3]=useState(0);const[pot,setPot]=useState(0);const[clientBetAmount,setClientBetAmount]=useState(0);const[cards,setCards]=useState([]);// Assuming you want to keep track of all dealt cards\nconst[runIndex,setRunIndex]=useState(0);const[runIndex2,setRunIndex2]=useState(0);const[runIndex3,setRunIndex3]=useState(0);const[betResBoolean,setBetResBoolean]=useState(false);const[checkNoShow,setCheckNoShow]=useState(false);const[clientRaiseAmount,setClientRaiseAmount]=useState(0);const[multiRaise,setMultiRaise]=useState(false);const[dealer,setDealer]=useState(0);const[inputInteracted,setInputInteracted]=useState(false);const[noLimitIndex,setNoLimitIndex]=useState(0);const[plusBool,setPlusBool]=useState(false);const[interRaise,setInterRaise]=useState(0);const[raised,setRaised]=useState(false);const[justOneRaise,setJustOneRaise]=useState(false);const[secondRaise,setSecondRaise]=useState(false);const[abstractRaise,setAbstractRaise]=useState(false);const[minusBetBoolean,setMinusBetBoolean]=useState(false);const[brSecRaise,setBrSecRaise]=useState(0);const[lastBetRezz,setLastBetRezz]=useState(0);const[SB,setSB]=useState(0);const[isSmallBlind,setIsSmallBlind]=useState(false);const[isBigBlind,setIsBigBlind]=useState(false);const[stopB1,setStopB1]=useState(0);const[stopB2,setStopB2]=useState(0);const[titkiStopper,setTitkiStopper]=useState(0);const[stopper99,setStopper99]=useState(0);const[playerFolded,setPlayerFolded]=useState(false);const[foldedChipsSave,setFoldedChipsSave]=useState(0);const[playerMarkedReady,setPlayerMarkedReady]=useState(false);const[betDraggingValue,setBetDraggingValue]=useState(0);const[raiseDraggingValue,setRaiseDraggingValue]=useState(0);const[minRaise,setMinRaise]=useState(0);const[raiseLimitReached,setRaiseLimitReached]=useState(false);const[input2Interacted,setInput2Interacted]=useState(false);const[everyonesChips,setEveryonesChips]=useState([]);const[copied,setCopied]=useState(false);const[combinedCards,setCombinedCards]=useState([]);const[myHandQuant,setMyHandQuant]=useState(0);const[showOtherCards,setShowOtherCards]=useState(false);const[storePot,setStorePot]=useState(0);const[everyonesHand,setEveryonesHand]=useState([]);const[interBet,setInterBet]=useState(0);const[interIndex,setInterIndex]=useState(0);useEffect(()=>{if(isTurn){// Increment turnCount each time isTurn becomes true\nsetTurnCount(prevCount=>prevCount+1);}if(turnCount>=1){if(isTurn){setTurnCount2(prevCount2=>prevCount2+1);}}if(turnCount2>=1){if(isTurn){setTurnCount3(prevCount3=>prevCount3+1);}}},[isTurn]);useEffect(()=>{let playerId=localStorage.getItem('playerId');if(!playerId){playerId=uuidv4();localStorage.setItem('playerId',playerId);}setPlayerId(playerId);socket.emit('joinGame',{gameId,playerId});socket.emit('joinRoom',{roomId:gameId});const handleGameUpdated=_ref=>{let{game}=_ref;setGameState(game);setPlayersInGame(game.playersIds);console.log(\"players in game are: \".concat(playersInGame));};socket.on('gameUpdated',handleGameUpdated);socket.on('cardsDealt',dealtCards=>{setPlayerHand(dealtCards);});socket.on('chipsDealt',playerChips=>{setPlayerMoney(playerChips);const newEveryonesChips=Array(playersInGame.length).fill(5000);setEveryonesChips(newEveryonesChips);});socket.on('noCheck',()=>{setCheckNoShow(true);});socket.on('onlyBetRes',()=>{setBetResBoolean(true);});socket.on('flopDealt',flopCards=>{if(runIndex<=1){const newCards=[...cards,...flopCards];setCards(newCards);setTableCards(newCards.slice(0,3));console.log('flop dealt');setRunIndex(runIndex+1);}});socket.on('goFlop',()=>{socket.emit('requestFlop',{gameId});setRaiseLimitReached(false);setInput2Interacted(false);setCheckNoShow(false);setBetResBoolean(false);setClientBetAmount(0);setClientRaiseAmount(0);setMultiRaise(false);setInputInteracted(false);setNoLimitIndex(0);setInterBet(0);setPlusBool(false);setInterRaise(0);setRaised(false);setJustOneRaise(false);setSecondRaise(false);setAbstractRaise(0);setMinusBetBoolean(false);setBrSecRaise(0);setLastBetRezz(false);});socket.on('turnDealt',turnCards=>{if(runIndex2<=1){const newCards=[...cards,...turnCards];setCards(newCards);setTableCards(newCards.slice(0,4));console.log('turn dealt');setRunIndex2(runIndex2+1);}});socket.on('goTurn',()=>{socket.emit('requestTurn',{gameId});setRaiseLimitReached(false);setInput2Interacted(false);setCheckNoShow(false);setBetResBoolean(false);setClientBetAmount(0);setClientRaiseAmount(0);setMultiRaise(false);setInputInteracted(false);setNoLimitIndex(0);setInterBet(0);setPlusBool(false);setInterRaise(0);setRaised(false);setJustOneRaise(false);setSecondRaise(false);setAbstractRaise(0);setMinusBetBoolean(false);setBrSecRaise(0);setLastBetRezz(false);});socket.on('riverDealt',riverCards=>{if(runIndex3<=1){const newCards=[...cards,...riverCards];setCards(newCards);setTableCards(newCards.slice(0,5));console.log('river dealt');setRunIndex3(runIndex3+1);}});socket.on('goRiver',()=>{socket.emit('requestRiver',{gameId});setRaiseLimitReached(false);setInput2Interacted(false);setCheckNoShow(false);setBetResBoolean(false);setClientBetAmount(0);setClientRaiseAmount(0);setMultiRaise(false);setInputInteracted(false);setNoLimitIndex(0);setInterBet(0);setPlusBool(false);setInterRaise(0);setRaised(false);setJustOneRaise(false);setSecondRaise(false);setAbstractRaise(0);setMinusBetBoolean(false);setBrSecRaise(0);setLastBetRezz(false);});socket.on('titkiBig',_ref2=>{let{titkiBig}=_ref2;if(titkiStopper<1&&stopper99<1&&isTurn){setIsSmallBlind(false);setIsBigBlind(false);setClientBetAmount(Number(titkiBig));setTitkiStopper(titkiStopper+1);}});socket.on('newPot2',_ref3=>{let{newPot2,betAmount}=_ref3;setPot(Number(newPot2));socket.emit('blindSter',{blindSter:Number(betAmount),gameId});});socket.on('updateTurnAfterBlinds',_ref4=>{let{isTurn,playerId:currentTurnPlayerId}=_ref4;setIsSmallBlind(false);setIsBigBlind(false);if(playerId===currentTurnPlayerId){setIsTurn(isTurn);setBetResBoolean(true);setCheckNoShow(true);console.log('after blinds player');console.log('isTurn:',isTurn);}});socket.on('updateTurnBigBlind',_ref5=>{let{isTurn,playerId:currentTurnPlayerId}=_ref5;if(playerId===currentTurnPlayerId){setIsTurn(isTurn);setIsSmallBlind(false);if(isBigBlind&&isTurn&&stopB2<1){if(playerMoney>=50&&stopper99<1){console.log(\"player money:  \".concat(playerMoney,\" \"));setPlayerMoney(playerMoney-50);console.log(\"player money:  \".concat(playerMoney,\" \"));socket.emit('potBB',{potBB:50,gameId});setStopper99(stopper99+1);setIsTurn(false);console.log(\"player money:  \".concat(playerMoney,\" \"));}else if(playerMoney<50&&stopper99<1){socket.emit('potBB',{potBB:playerMoney,gameId});setPlayerMoney(playerMoney-playerMoney);setStopper99(stopper99+1);setIsTurn(false);console.log(\"player money:  \".concat(playerMoney,\" 2\"));}console.log(\"player money:  \".concat(playerMoney,\" 3\"));setStopB2(stopB2+1);setIsBigBlind(false);console.log(\"player money:  \".concat(playerMoney,\" 4\"));}console.log(\"player money:  \".concat(playerMoney,\" 5\"));console.log('Update turn event received');console.log('isBigBlind:',isBigBlind);console.log('isTurn:',isTurn);}});socket.on('updateTurnSmallBlind',_ref6=>{let{isTurn,playerId:currentTurnPlayerId}=_ref6;if(playerId===currentTurnPlayerId){setIsTurn(isTurn);if(isSmallBlind&&isTurn&&stopB1<1){if(playerMoney>25){setPlayerMoney(playerMoney-25);setSB(25);socket.emit('potSB',{potSB:25,gameId});setIsTurn(false);}else{socket.emit('potSB',{potSB:playerMoney,gameId});setPlayerMoney(playerMoney-playerMoney);setIsTurn(false);}setStopB1(stopB1+1);setIsSmallBlind(false);playSound(betSound);}console.log('Update turn event received');console.log('isSmallBlind:',isSmallBlind);console.log('isTurn:',isTurn);}});socket.on('updateTurn',_ref7=>{let{isTurn,playerId:currentTurnPlayerId}=_ref7;if(playerId===currentTurnPlayerId){setIsTurn(isTurn);}});socket.on('didRaise',()=>{setRaised(true);});socket.on('dealerEmitted',_ref8=>{let{isDealer}=_ref8;setDealer(Number(isDealer));});// Listen for 'playersReady' event to update UI with ready count\nsocket.on('playersReady',_ref9=>{let{count,total}=_ref9;// Update your UI to show something like \"1/2 Players Ready\"\nsetGameStatus(\": \".concat(count,\"/\").concat(total,\" Players Ready\"));setPlayerMarkedReady(true);});// Listen for 'gameStarted' to proceed to the game view\nsocket.on('gameStarted',_ref10=>{let{gameId}=_ref10;setPlayerMarkedReady(false);socket.emit('startGame',{gameId});console.log('Game has started');setGameStarted(true);});socket.on('potUpdated',_ref11=>{let{betAmount}=_ref11;console.log(\"Received betAmountpotUpd:\",betAmount,\"Current pot:\",pot);const numericBetAmount=Number(betAmount);// Assuming betAmount is the amount to add to the current pot\nconst updatedPot=Number(pot)+Number(betAmount);console.log(\"Updated pot:\",updatedPot);if(!playerFolded){setClientBetAmount(numericBetAmount);}setPot(Number(updatedPot));});socket.on('betAfterFold',_ref12=>{let{betAmount}=_ref12;console.log(\"Received betAmountAfterFold:\",betAmount);const numericBetAmount=Number(betAmount);setClientBetAmount(numericBetAmount);});socket.on('betAfterFold2',_ref13=>{let{betAmount}=_ref13;console.log(\"Received betAmount:\",betAmount);const numericBetAmount=0;setClientBetAmount(0);});socket.on('raiseEmitted',_ref14=>{let{betAmount}=_ref14;console.log(\"Received betAmountRaiseEmitted:\",betAmount,\"Current pot:\",pot);const numericBetAmount=Number(betAmount);// Assuming betAmount is the amount to add to the current pot\nconst updatedPot=Number(pot)+Number(betAmount);console.log(\"Updated pot:\",updatedPot);if(noLimitIndex===1){setMultiRaise(false);const noLimitPot=Number(pot)+numericBetAmount;if(!playerFolded){setClientBetAmount(numericBetAmount);}setPot(pot+numericBetAmount);}else if(noLimitIndex>=2){if(interIndex<=1){setMultiRaise(true);if(!playerFolded){setClientBetAmount(numericBetAmount);}setPot(pot+numericBetAmount);setInterIndex(interIndex+1);}else{if(plusBool){console.log(\"Updated pot:\",updatedPot);if(!playerFolded){setClientBetAmount(numericBetAmount);}setPot(Number(pot)+numericBetAmount);}else{setMultiRaise(true);if(!playerFolded){setClientBetAmount(numericBetAmount);}setPot(pot+numericBetAmount);}}}else{if(plusBool){console.log(\"Updated pot:\",updatedPot);if(!playerFolded){setClientBetAmount(numericBetAmount);}setPot(Number(pot)+numericBetAmount);}else{console.log(\"Updated pot:\",updatedPot);if(!playerFolded){setClientBetAmount(numericBetAmount);}setPot(Number(pot)+numericBetAmount);}}});socket.on('raisecTwo',_ref15=>{let{betAmount}=_ref15;setPlusBool(true);});socket.on('interRaiseBetres',_ref16=>{let{ir}=_ref16;setAbstractRaise(Number(ir));});socket.on('onlyOneRaise',()=>{setJustOneRaise(true);});socket.on('twoRaise',()=>{setSecondRaise(true);});socket.on('minusBet',()=>{setMinusBetBoolean(true);});socket.on('betRezzySecRaise',_ref17=>{let{brSecRaise}=_ref17;setBrSecRaise(Number(brSecRaise));});/*socket.on('lastBetRezzy',({betRezzy}) => {\r\n  setLastBetRezz(true);\r\n  if (stopIndex<1 && interBet === 0 && interRaise === 0 && isTurn){\r\n  setPlayerMoney(playerMoney-Number(betRezzy));\r\n  setStopIndex(stopIndex+1);\r\n  console.log(`secBr:${secBr}`);\r\n}\r\n  setLastBetRezz(false);\r\n});*/socket.on('hhGG',_ref18=>{let{hhGG}=_ref18;if(interBet===0&&interRaise===0&&isTurn){setPlayerMoney(playerMoney-Number(hhGG));}else{setPlayerMoney(playerMoney+0);}});socket.on('seccyBR',_ref19=>{let{seccyBR}=_ref19;if(interBet===0&&interRaise===0&&!playerFolded){setPlayerMoney(playerMoney-Number(seccyBR));}else{setPlayerMoney(playerMoney+0);}});socket.on('potPlus',_ref20=>{let{potPlus}=_ref20;setPot(pot+Number(potPlus));});socket.on('upRaise',_ref21=>{let{upRaise}=_ref21;if(interBet===0&&interRaise===0&&isTurn){setPlayerMoney(playerMoney+0);}});socket.on('chipsMinus',_ref22=>{let{chipsMinus}=_ref22;if(interBet===0&&interRaise!==0){setPlayerMoney(playerMoney-Number(chipsMinus));}});socket.on('chipsMinus2',_ref23=>{let{chipsMinus2}=_ref23;if(interBet!==0&&interRaise===0){setPlayerMoney(playerMoney-Number(chipsMinus2));}else{setPlayerMoney(playerMoney+0);}});socket.on('twoPtwoR',_ref24=>{let{twoPtwoR}=_ref24;if(interBet!==0&&interRaise===0){setPlayerMoney(playerMoney-Number(twoPtwoR));}else{setPlayerMoney(playerMoney+0);}});socket.on('tootsiePlus',_ref25=>{let{tootsiePlus}=_ref25;if(interBet===0&&interRaise!==0&&isTurn){setPlayerMoney(playerMoney-Number(tootsiePlus));}else{setPlayerMoney(playerMoney+0);}});socket.on('chippyMin',_ref26=>{let{chippyMin}=_ref26;if(interBet===0&&interRaise===0){setPlayerMoney(playerMoney-Number(chippyMin));}else{setPlayerMoney(playerMoney+0);}});socket.on('chippyM',_ref27=>{let{chippyM}=_ref27;if(interBet===0&&interRaise===0&&isTurn){setPlayerMoney(playerMoney-Number(chippyM));}else{setPlayerMoney(playerMoney+0);}});socket.on('cPMM',_ref28=>{let{cPMM}=_ref28;if(interBet===0&&interRaise!==0&&isTurn){setPlayerMoney(playerMoney-Number(cPMM));}else{setPlayerMoney(playerMoney+0);}});socket.on('zzTT',_ref29=>{let{zzTT}=_ref29;if(interBet!==0&&interRaise===0&&isTurn){setPlayerMoney(playerMoney-Number(zzTT));}else{setPlayerMoney(playerMoney+0);}setIsTurn(false);});socket.on('secSEC',_ref30=>{let{secSEC}=_ref30;if(interBet===0&&interRaise!==0&&isTurn){setPlayerMoney(playerMoney-Number(secSEC));}else{setPlayerMoney(playerMoney+0);}setIsTurn(false);});socket.on('vvPP',_ref31=>{let{vvPP}=_ref31;if(interBet===0&&interRaise!==0&&isTurn){setPlayerMoney(playerMoney-Number(vvPP));}else{setPlayerMoney(playerMoney+0);}setIsTurn(false);});socket.on('aaTT',_ref32=>{let{aaTT}=_ref32;if(interBet===0&&interRaise===0&&isTurn){setPlayerMoney(playerMoney-Number(aaTT));}else{setPlayerMoney(playerMoney+0);}setIsTurn(false);});socket.on('ppPP',_ref33=>{let{ppPP}=_ref33;if(interBet!==0&&interRaise===0&&isTurn){setPlayerMoney(playerMoney-Number(ppPP));}else{setPlayerMoney(playerMoney+0);}setIsTurn(false);});socket.on('ddDD',_ref34=>{let{ddDD}=_ref34;if(interBet===0&&interRaise!==0&&isTurn){setPlayerMoney(playerMoney-Number(ddDD));}else{setPlayerMoney(playerMoney+0);}setIsTurn(false);});socket.on('xXX',_ref35=>{let{xXX}=_ref35;if(interBet===0&&interRaise!==0&&isTurn){setPlayerMoney(playerMoney-Number(xXX));}else{setPlayerMoney(playerMoney+0);}setIsTurn(false);});socket.on('bBB',_ref36=>{let{bBB}=_ref36;if(interBet===0&&interRaise!==0&&isTurn){setPlayerMoney(playerMoney-Number(bBB));}else{setPlayerMoney(playerMoney+0);}setIsTurn(false);});socket.on('sB',()=>{setIsSmallBlind(true);});socket.on('bB',()=>{setIsBigBlind(true);});socket.on('skiPot',_ref37=>{let{skiPot}=_ref37;setPot(Number(skiPot));});socket.on('lll2',_ref38=>{let{lll2}=_ref38;if(isTurn){setPlayerMoney(playerMoney-Number(lll2));}});socket.on('lll3',_ref39=>{let{lll3}=_ref39;if(isTurn){setPlayerMoney(playerMoney-Number(lll3));}});socket.on('lll35',_ref40=>{let{lll35}=_ref40;if(isTurn&&!playerFolded){setPlayerMoney(playerMoney-Number(lll35));}else if(isTurn&&playerFolded){setPlayerMoney(playerMoney+Number(lll35));}});socket.on('rrr3',_ref41=>{let{rrr3}=_ref41;if(isTurn){setPlayerMoney(playerMoney-Number(rrr3));}});socket.on('lll4',_ref42=>{let{lll4}=_ref42;if(isTurn){setPlayerMoney(playerMoney-Number(lll4));}});socket.on('lll22',_ref43=>{let{lll22}=_ref43;if(isTurn){setPlayerMoney(playerMoney-Number(lll22));}});socket.on('lll223',_ref44=>{let{lll223}=_ref44;if(isTurn){setPlayerMoney(playerMoney-Number(lll223));}});socket.on('preflop008',_ref45=>{let{preflop008}=_ref45;if(isTurn){setPlayerMoney(playerMoney-Number(preflop008));}});socket.on('preflop0082',_ref46=>{let{preflop0082}=_ref46;if(isTurn){setPlayerMoney(playerMoney-Number(preflop0082));}});socket.on('preflop0085',_ref47=>{let{preflop0085}=_ref47;if(isTurn){setPlayerMoney(playerMoney-Number(preflop0085));}});socket.on('rr2235',_ref48=>{let{rr2235}=_ref48;if(isTurn){setPlayerMoney(playerMoney-Number(rr2235));}});socket.on('preflop149999',_ref49=>{let{preflop149999}=_ref49;if(isTurn){setPlayerMoney(playerMoney-Number(preflop149999));}});socket.on('preflop31',_ref50=>{let{preflop31}=_ref50;if(isTurn){setPlayerMoney(playerMoney-Number(preflop31));}});socket.on('tripprefin',_ref51=>{let{tripprefin}=_ref51;if(isTurn){setPlayerMoney(playerMoney-Number(tripprefin));}});socket.on('preflopXX',_ref52=>{let{preflopXX}=_ref52;if(isTurn){setPlayerMoney(playerMoney-Number(preflopXX));}});socket.on('tgTG',_ref53=>{let{tgTG}=_ref53;if(isTurn){setPlayerMoney(playerMoney-Number(tgTG));}});socket.on('preflopOO',_ref54=>{let{preflopOO}=_ref54;if(isTurn){setPlayerMoney(playerMoney-Number(preflopOO));}});socket.on('preflop1454',_ref55=>{let{preflop1454}=_ref55;if(isTurn){setPlayerMoney(playerMoney-Number(preflop1454));}});socket.on('zXY',_ref56=>{let{zXY}=_ref56;if(isTurn){setPlayerMoney(playerMoney-Number(zXY));}});socket.on('jjII',_ref57=>{let{jjII}=_ref57;if(isTurn){setPlayerMoney(playerMoney-Number(jjII));}});socket.on('jjKK',_ref58=>{let{jjKK}=_ref58;if(isTurn){setPlayerMoney(playerMoney-Number(jjKK));}});socket.on('ccCC',_ref59=>{let{ccCC}=_ref59;if(isTurn){setPlayerMoney(playerMoney-Number(ccCC));}});socket.on('ccCC2',_ref60=>{let{ccCC2}=_ref60;if(isTurn){setPlayerMoney(playerMoney-Number(ccCC2));}});socket.on('yyTT',_ref61=>{let{yyTT}=_ref61;if(isTurn){setPlayerMoney(playerMoney-Number(yyTT));}});socket.on('jjKK2',_ref62=>{let{jjKK2}=_ref62;if(isTurn){setPlayerMoney(playerMoney-Number(jjKK2));}});socket.on('ccCC3',_ref63=>{let{ccCC3}=_ref63;if(isTurn){setPlayerMoney(playerMoney-Number(ccCC3));}});socket.on('yyTT33',_ref64=>{let{yyTT33}=_ref64;if(isTurn){setPlayerMoney(playerMoney-Number(yyTT33));}});socket.on('yyTTKK',_ref65=>{let{yyTTKK}=_ref65;if(isTurn){setPlayerMoney(playerMoney-Number(yyTTKK));}});socket.on('gimmeCashUpdate',()=>{socket.emit('cashUpdate',{cashUpdate:playerMoney,playerId,gameId});});socket.on('oneChi',_ref66=>{let{oneChi}=_ref66;if(isTurn){setPlayerMoney(playerMoney-Number(oneChi));}});socket.on('tootsieD',_ref67=>{let{tootsieD}=_ref67;if(isTurn){setPlayerMoney(playerMoney-Number(tootsieD));}});socket.on('thatCase',_ref68=>{let{thatCase}=_ref68;if(isTurn){setPlayerMoney(playerMoney-Number(thatCase));}});socket.on('folderfourp09',_ref69=>{let{folderfourp09}=_ref69;if(isTurn){setPlayerMoney(playerMoney-Number(folderfourp09));}});socket.on('playerFolded',()=>{if(isTurn){setPlayerFolded(true);setFoldedChipsSave(playerMoney);}});socket.on('for4withonefold',_ref70=>{let{for4withonefold}=_ref70;if(isTurn){setPlayerMoney(playerMoney-Number(for4withonefold));}});socket.on('seccyBR20',_ref71=>{let{seccyBR20}=_ref71;if(isTurn){setPlayerMoney(playerMoney-Number(seccyBR20));}});socket.on('twoPtwoR33',_ref72=>{let{twoPtwoR33}=_ref72;if(isTurn){setPlayerMoney(playerMoney-Number(twoPtwoR33));}});socket.on('jjII233',_ref73=>{let{jjII233}=_ref73;if(isTurn){setPlayerMoney(playerMoney-Number(jjII233));}});socket.on('trippyFins',_ref74=>{let{trippyFins}=_ref74;if(isTurn){setPlayerMoney(playerMoney-Number(trippyFins));}});socket.on('minusDuplicate',_ref75=>{let{gameId}=_ref75;socket.emit('duplicateSubtract',{gameId});});socket.on('criTri',_ref76=>{let{criTri}=_ref76;if(isTurn){setPlayerMoney(playerMoney-Number(criTri));}});socket.on('raiseLimitReached',()=>{setRaiseLimitReached(true);});socket.on('minRaise',_ref77=>{let{minRaise}=_ref77;setMinRaise(Number(minRaise)+1);});socket.on('minRaiseEqBB',_ref78=>{let{minRaiseEqBB}=_ref78;setMinRaise(Number(minRaise)+1);});/*if (playerFolded && isTurn){\r\n  socket.emit('foldSkip', {gameId});\r\n};*/if(playerFolded){setPlayerMoney(foldedChipsSave);};socket.on('selectWinner',()=>{setStorePot(pot);const newCombinedCards=[...playerHand,...tableCards];const namesForStraight=['two','three','four','five','six','seven','eight','nine','ten','jack','queen','king','ace'];setCombinedCards(newCombinedCards);console.log('Combined cards:',newCombinedCards,newCombinedCards.name,combinedCards.name,combinedCards.suit);console.log('Player hand:',playerHand);console.log('Table cards:',tableCards);let handScore=0;let twoCardScore=0;const playerHandCardNames=playerHand.map(card=>card.name);for(let i=0;i<namesForStraight.length;i++){if(playerHandCardNames.includes(namesForStraight[i])){twoCardScore=i;}}const tableCardNames=tableCards.map(card=>card.name);const tableCardSuits=tableCards.map(card=>card.suit);const tableCardNameCounts=tableCards.reduce((counts,card)=>{counts[card.name]=(counts[card.name]||0)+1;return counts;},{});const tableCardSuitCounts=tableCards.reduce((counts,card)=>{counts[card.suit]=(counts[card.suit]||0)+1;return counts;},{});const uniqueTableCardNames=Object.keys(tableCardNameCounts);const uniqueTableCardSuits=Object.keys(tableCardSuitCounts);const tablePairCardNames=Object.keys(tableCardNameCounts).filter(name=>tableCardNameCounts[name]===2);const setTableCardNames=Object.keys(tableCardNameCounts).filter(name=>tableCardNameCounts[name]===3);const twoPairTableCardNames=tablePairCardNames.filter(name=>tableCardNameCounts[name]===2);const fourTableCardNames=Object.keys(tableCardNameCounts).filter(name=>tableCardNameCounts[name]===4);const fullHousetableCardNamePairs=tablePairCardNames.filter(name=>!setTableCardNames.includes(name));const flushTableCardSuits=Object.keys(tableCardSuitCounts).filter(suit=>tableCardSuitCounts[suit]===5);// top = table //////////////////////////// bottom = combined /////////////////////////////////////////////////////////////\nconst cardNames=newCombinedCards.map(card=>card.name);const cardSuits=newCombinedCards.map(card=>card.suit);const cardNameCounts=newCombinedCards.reduce((counts,card)=>{counts[card.name]=(counts[card.name]||0)+1;return counts;},{});const cardSuitCounts=newCombinedCards.reduce((counts,card)=>{counts[card.suit]=(counts[card.suit]||0)+1;return counts;},{});const uniqueCardNames=Object.keys(cardNameCounts);const pairCardNames=Object.keys(cardNameCounts).filter(name=>cardNameCounts[name]===2);const setCardNames=Object.keys(cardNameCounts).filter(name=>cardNameCounts[name]===3);const twoPairCardNames=pairCardNames.filter(name=>cardNameCounts[name]===2);const fourCardNames=Object.keys(cardNameCounts).filter(name=>cardNameCounts[name]===4);const fullHouseCardNamePairs=pairCardNames.filter(name=>!setCardNames.includes(name));const flushCardSuits=Object.keys(cardSuitCounts).filter(suit=>cardSuitCounts[suit]===5);const flushCardSuitsplusone=Object.keys(cardSuitCounts).filter(suit=>cardSuitCounts[suit]===6);const flushCardSuitsplustwo=Object.keys(cardSuitCounts).filter(suit=>cardSuitCounts[suit]===7);const pairCardName=playerHand.map(card=>card.name).find(name=>pairCardNames.includes(name));const pairIndex=namesForStraight.indexOf(pairCardName);let flush=false;let pair=false;let twopair=false;let set=false;let fourofakind=false;let straightflush=false;let royalflush=false;let straight=false;const sortedNamesForStraight=namesForStraight.slice().sort();for(let i=0;i<=cardNames.length-5;i++){const subList=cardNames.slice(i,i+5);const sortedSubList=subList.slice().sort();const isStraight=sortedSubList.every((name,index)=>name===sortedNamesForStraight[index]);if(isStraight){straight=true;break;}}const isFullHousePossible=fullHouseCardNamePairs.length===1&&setCardNames.length>0&&fullHousetableCardNamePairs.length===0||fullHouseCardNamePairs.length===2&&setCardNames.length>0&&fullHousetableCardNamePairs.length===1;if(pairCardNames.length===1){//pair\npair=true;handScore=300+pairIndex;}if(twoPairCardNames.length===2){//two pairs\ntwopair=true;handScore=325+twoCardScore;}if(setCardNames.length===1&&setTableCardNames<1){//set\nset=true;handScore=350+twoCardScore;}else if(setCardNames.length===2&&setTableCardNames<2){//set\nset=true;handScore=350+twoCardScore;}if(straight){//straight\nhandScore=375+twoCardScore;}if(flushCardSuits.length===1&&flushTableCardSuits<1||flushCardSuitsplusone.length===1&&flushTableCardSuits===1||flushCardSuitsplusone.length===1&&flushTableCardSuits===0||flushCardSuitsplustwo.length===1&&flushTableCardSuits===1||flushCardSuitsplustwo.length===1&&flushTableCardSuits===0){//flush\nflush=true;handScore=400+twoCardScore;}if(isFullHousePossible){//full house\nhandScore=425+twoCardScore;}if(fourCardNames.length===1&&fourTableCardNames!==1){//four of a kind\nfourofakind=true;handScore=450+twoCardScore;}if(straight&&flush){//straight flush \nstraightflush=true;handScore=475+twoCardScore;}if(straight&&flush&&cardNames.includes('ten')&&cardNames.includes('jack')&&cardNames.includes('queen')&&cardNames.includes('king')&&cardNames.includes('ace')){//royal flush \nroyalflush=true;handScore=500+twoCardScore;}if(!pair&&!twopair&&!set&&!straight&&!flush&&!isFullHousePossible&&!fourofakind&&!straightflush&&!royalflush){handScore=0+twoCardScore;}console.log(\"handscore : \".concat(handScore));setMyHandQuant(handScore);console.log(\"myhandquant inside handscore DecompressionStreammining func \".concat(myHandQuant));socket.emit('sendHandScore',{gameId,handScore});});socket.on('determineWinner',_ref79=>{let{highestHandScore,numPlayersWithHighestScore}=_ref79;let allHands=Array(playersInGame.length).fill([]);setEveryonesHand(allHands);socket.emit('winnerIntermed',{gameId,highestHandScore,numPlayersWithHighestScore,playerHand,playerId});});socket.on('winningHandScore',_ref80=>{let{highestHandScore,numPlayersWithHighestScore,playerHand,playerI}=_ref80;console.log(\"Before updating everyonesHand\");console.log(\"playersInGame: \".concat(playersInGame));console.log(\"playerId: \".concat(playerId));console.log(\"playerI: \".concat(playerI));console.log(\"everyonesHand before update: \".concat(everyonesHand));let updatedEveryonesHand=[...everyonesHand];const playerIndex=playersInGame.indexOf(playerI);updatedEveryonesHand[playerIndex]=playerHand;setEveryonesHand(updatedEveryonesHand);console.log(\"upd evrns hnd \".concat(updatedEveryonesHand));console.log(\"everyonesHand before update: \".concat(everyonesHand));setShowOtherCards(true);console.log(\"pm before applying winnings: \".concat(playerMoney));console.log(\"myHandQuant: \".concat(myHandQuant));console.log(\"highestHandScore: \".concat(highestHandScore));console.log(\"numPlayersWithHighestScore: \".concat(numPlayersWithHighestScore));if(!playerFolded&&myHandQuant===Number(highestHandScore)&&Number(numPlayersWithHighestScore)===1){setPlayerMoney(playerMoney+storePot/Number(numPlayersWithHighestScore));console.log(\"pm after applying winnings: \".concat(playerMoney));}if(!playerFolded&&myHandQuant===Number(highestHandScore)&&Number(numPlayersWithHighestScore)===2&&playersInGame.length===2){setPlayerMoney(playerMoney+storePot/2);}console.log(highestHandScore);console.log(\"storepot: \".concat(storePot));});socket.on('newHand',()=>{socket.emit('gameSequence2',{gameId});setRaiseLimitReached(false);setPlayerFolded(false);setInput2Interacted(false);socket.emit('requestCashUpdate',{gameId});setPlayerHand([]);setCheckNoShow(false);setBetResBoolean(false);setClientBetAmount(0);setClientRaiseAmount(0);setPot(0);setTableCards([]);setCards([]);setRunIndex(0);setRunIndex2(0);setRunIndex3(0);setNoLimitIndex(0);setMultiRaise(false);setInputInteracted(false);setInterBet(0);setPlusBool(false);setInterRaise(0);setRaised(false);setJustOneRaise(false);setSecondRaise(false);setAbstractRaise(0);setMinusBetBoolean(false);setBrSecRaise(0);setLastBetRezz(false);setIsSmallBlind(true);setIsBigBlind(true);setStopB1(0);setStopB2(0);setTitkiStopper(0);setStopper99(0);setTurnCount(0);setTurnCount2(0);setTurnCount3(0);});window.addEventListener('beforeunload',function(event){// Emit an event to the server indicating the player is leaving the game\nsocket.emit('playerLeaving',{gameId,playerId});});socket.emit('newPlayerChips',{newPlayerChips:playerMoney,gameId,whoseChips:playersInGame.indexOf(playerId)});socket.on('newChipsRightBack',_ref81=>{let{newChipsRightBack,whosMoney}=_ref81;setEveryonesChips(prevChips=>{const updatedChips=[...prevChips];const playerIndex=Number(whosMoney);updatedChips[playerIndex]=newChipsRightBack;return updatedChips;});console.log(\"everyones chips array: \".concat(everyonesChips));});const playSound=soundUrl=>{const audio=new Audio(soundUrl);audio.play();};socket.on('emitFoldSound',()=>{playSound(foldSound);});socket.on('emitCheckSound',()=>{playSound(checkSound);});socket.on('emitBetResSound',()=>{playSound(betSound);});socket.on('emitBetSound',()=>{playSound(betSound);});socket.on('payTheNonFolder',()=>{if(!playerFolded){setPlayerMoney(playerMoney+pot);}});return()=>{socket.off('gameUpdated',handleGameUpdated);socket.off('noCheck');socket.off('gameStarted');socket.off('cardsDealt');socket.off('flopDealt');socket.off('turnDealt');socket.off('riverDealt');socket.off('updateTurn');socket.off('playersReady');socket.off('chipsDealt');socket.off('betMade');socket.off('potUpdated');socket.off('raiseEmitted');socket.off('dealerEmitted');socket.off('interRaiseBetres');socket.off('didRaise');socket.off('onlyOneRaise');socket.off('twoRaise');socket.off('raisecTwo');socket.off('minusBet');socket.off('lastBetRezzy');socket.off('seccyBR');socket.off('upRaise');socket.off('chipsMinus');socket.off('chipsMinus2');socket.off('twoPtwoR');socket.off('tootsiePlus');socket.off('chippyMin');socket.off('cPMM');socket.off('zzTT');socket.off('vvPP');socket.off('aaTT');socket.off('ppPP');socket.off('ddDD');socket.off('hhGG');socket.off('chippyM');socket.off('xXX');socket.off('bBB');socket.off('sB');socket.off('bB');socket.off('updateTurnSmallBlind');socket.off('updateTurnBigBlind');socket.off('updateTurnAfterBlinds');socket.off('newPot2');socket.off('skiPot');socket.off('lll2');socket.off('lll3');socket.off('rrr3');socket.off('lll4');socket.off('lll22');socket.off('lll223');socket.off('preflop008');socket.off('preflop0082');socket.off('preflop0085');socket.off('preflop149999');socket.off('rr2235');socket.off('preflop31');socket.off('tripprefin');socket.off('preflopXX');socket.off('tgTG');socket.off('preflopOO');socket.off('preflop1454');socket.off('zXY');socket.off('jjII');socket.off('jjKK');socket.off('ccCC');socket.off('ccCC2');socket.off('yyTT');socket.off('jjKK2');socket.off('ccCC3');socket.off('yyTT33');socket.off('yyTTKK');socket.off('newHand');socket.off('titkiBig');socket.off('onlyBetRes');socket.off('goFlop');socket.off('goTurn');socket.off('goRiver');socket.off('gimmeCashUpdate');socket.off('betRezzySecRaise');socket.off('potPlus');socket.off('secSEC');socket.off('oneChi');socket.off('tootsieD');socket.off('thatCase');socket.off('playerFolded');socket.off('betAfterFold');socket.off('betAfterFold2');socket.off('folderfourp09');socket.off('for4withonefold');socket.off('seccyBR20');socket.off('lll35');socket.off('twoPtwoR33');socket.off('jjII233');socket.off('trippyFins');socket.off('criTri');socket.off('duplicateSubtract');socket.off('minRaise');socket.off('raiseLimitReached');socket.off('minRaiseEqBB');socket.off('newChipsRightBack');socket.off('emitBetSound');socket.off('emitBetResSound');socket.off('emitCheckSound');socket.off('emitFoldSound');socket.off('winnerSelected');socket.off('selectWinner');socket.off('payTheNonFolder');socket.off('winningHandScore');socket.off('gameCardsDealt');socket.off('determineWinner');};},[gameId,socket,turnCount,playerId,pot,cards,runIndex,dealer,myHandQuant,storePot,everyonesHand]);const handlePlayerAction=(actionType,betAmount,event,clientBetAmount)=>{const playerId=localStorage.getItem('playerId');// Ensure betAmount is a number\nconst numericBetAmount=Number(betAmount);const numericRaiseAmount=Number(clientRaiseAmount);// Ensure playerMoney and pot are treated as numbers\nconst numericPlayerMoney=Number(playerMoney);const numericPot=Number(pot);const updatedChips=numericPlayerMoney-numericBetAmount;let actionPayload={gameId,playerId,action:actionType,betAmount:numericBetAmount};if(isTurn&&actionType==='bet'&&numericBetAmount>0&&betAmount>0&&betAmount<=playerMoney&&numericBetAmount<=numericPlayerMoney){setNoLimitIndex(noLimitIndex+1);setClientBetAmount(numericBetAmount);setPlayerMoney(numericPlayerMoney-numericBetAmount);setInterBet(numericBetAmount);socket.emit('betSound',{gameId});}else if(isTurn&&actionType==='raise'&&numericBetAmount>0&&betAmount>0&&betAmount<=playerMoney&&numericBetAmount<=numericPlayerMoney){setNoLimitIndex(noLimitIndex+1);if(minusBetBoolean===true){setPlayerMoney(numericPlayerMoney-numericBetAmount+interBet);console.log('c1');}else{setClientBetAmount(numericBetAmount);setInputInteracted(false);setPlayerMoney(numericPlayerMoney-numericBetAmount);setInterRaise(numericBetAmount);console.log('c2');}socket.emit('betSound',{gameId});}else if(isTurn&&actionType==='betres'){console.log(\"lastbetrezz: \".concat(lastBetRezz));if(raised&&justOneRaise===true&&secondRaise===false){if(interBet>0){setClientBetAmount(numericBetAmount);setPlayerMoney(numericPlayerMoney-numericBetAmount+interBet);setPlusBool(true);console.log('r1');}else if(interRaise>0){setClientBetAmount(numericBetAmount);setPlayerMoney(numericPlayerMoney-numericBetAmount+interRaise);setPlusBool(true);console.log('r2');}else{setClientBetAmount(numericBetAmount);setPlayerMoney(numericPlayerMoney-numericBetAmount);setPlusBool(true);console.log('r2.5');}}else if(raised&&secondRaise===true&&justOneRaise===true){if(interBet>0){setClientBetAmount(numericBetAmount);setPlayerMoney(numericPlayerMoney-numericBetAmount+interBet);setPlusBool(true);console.log('r3');}else if(interRaise>0&&minusBetBoolean===false){setClientBetAmount(numericBetAmount);setPlayerMoney(numericPlayerMoney-abstractRaise+interRaise);setPlusBool(true);console.log('r4');}else if(interRaise>0&&minusBetBoolean===true){setPlayerMoney(numericPlayerMoney-brSecRaise+interRaise);setPlusBool(true);console.log('r4.5');console.log(abstractRaise);console.log(numericBetAmount);console.log(interRaise);}}else if(SB>0){setPlayerMoney(playerMoney-numericBetAmount+SB);let potski=pot-SB;socket.emit('potski',{potski,gameId});setSB(0);}else{setClientBetAmount(numericBetAmount);setPlayerMoney(numericPlayerMoney-numericBetAmount);setInputInteracted(false);setInput2Interacted(false);console.log('r5');}socket.emit('betResSound',{gameId});}else if(isTurn&&actionType==='check'){socket.emit('checkSound',{gameId});}else if(actionType==='check'){socket.emit('checkSound',{gameId});}else if(isTurn&&actionType==='fold'){socket.emit('foldSound',{gameId});}socket.emit('playerAction',actionPayload);setBetDraggingValue(0);setRaiseDraggingValue(0);};const markPlayerReady=()=>{socket.emit('playerReady',{gameId,playerId});};const handleInput=e=>{setBetDraggingValue(Number(e.target.value));};const copyToClipboard=()=>{navigator.clipboard.writeText(window.location.href);setCopied(true);setTimeout(()=>{setCopied(false);},500);};return/*#__PURE__*/_jsxs(\"div\",{className:\"floor\",children:[!gameStarted&&/*#__PURE__*/_jsx(\"button\",{className:\"invite-link\",onClick:copyToClipboard,children:/*#__PURE__*/_jsx(\"h1\",{children:copied?'Copied!':'Copy Invite Link'})}),/*#__PURE__*/_jsx(\"div\",{className:\"poker-table\",children:/*#__PURE__*/_jsx(\"div\",{className:\"tablecloth\"})}),playersInGame.map((_,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"player-\".concat(index),style:{width:'70px',height:'120px',backgroundColor:'black',margin:'10px',display:'flex',flexDirection:'column',justifyContent:'center',textAlign:'center'},children:[index===dealer&&/*#__PURE__*/_jsx(\"p\",{className:\"dealer-chip\",children:\"Dealer\"}),index===playersInGame.indexOf(playerId)&&/*#__PURE__*/_jsx(\"p\",{className:\"you\",children:\"You\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"chips\",children:[\"$ \",everyonesChips[index]]})]},index)),!gameStarted&&playersInGame.length>=2&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"button\",{className:\" \".concat(playerMarkedReady?'player-ready':'start-game-button'),onClick:()=>markPlayerReady(),children:playersInGame.length>=2&&/*#__PURE__*/_jsxs(\"h1\",{children:[\"Start Game \",/*#__PURE__*/_jsx(\"span\",{className:\"howmany-ready\",children:gameStatus})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"pot\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Pot: $\",Number(pot)]})}),/*#__PURE__*/_jsx(\"div\",{className:\"hand hand-\".concat(playersInGame.indexOf(playerId)),children:!playerFolded&&playerHand.map((card,index)=>/*#__PURE__*/_jsx(\"img\",{className:\"cards\",src:cardImages[\"\".concat(card.name,\"_\").concat(card.suit)],alt:\"\".concat(card.name,\" of \").concat(card.suit)},index))}),/*#__PURE__*/_jsx(\"div\",{className:\"ncp-container\",children:playersInGame.map((_,index)=>index!==playersInGame.indexOf(playerId)&&/*#__PURE__*/_jsxs(\"div\",{className:\"ncp-\".concat(index),children:[/*#__PURE__*/_jsx(\"img\",{src:cardBack,className:\"ncp\",alt:\"back of the card\"},index),/*#__PURE__*/_jsx(\"img\",{src:cardBack,className:\"ncp\",alt:\"back of the card\"},index)]}))}),isTurn&&/*#__PURE__*/_jsxs(\"div\",{className:\"action-choices\",children:[!playerFolded&&!checkNoShow&&/*#__PURE__*/_jsx(\"button\",{className:\"check\",onClick:()=>handlePlayerAction('check'),children:/*#__PURE__*/_jsx(\"p\",{children:\"Check\"})}),!playerFolded&&!betResBoolean&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"number-dragging\",children:/*#__PURE__*/_jsx(\"p\",{children:inputInteracted||input2Interacted?betDraggingValue:\"Drag to Bet\"})}),/*#__PURE__*/_jsx(\"input\",{className:\"draggable\",type:\"range\",min:playerMoney<25?0:25,max:playerMoney,value:clientBetAmount,onInput:handleInput,onChange:e=>{setClientBetAmount(Number(e.target.value));setInput2Interacted(true);},placeholder:\"Bet Amount\"})]}),!playerFolded&&betResBoolean&&!multiRaise&&!inputInteracted&&/*#__PURE__*/_jsx(\"button\",{className:\"check\",onClick:()=>handlePlayerAction('betres',clientBetAmount),children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Bet: $\",clientBetAmount]})}),!playerFolded&&betResBoolean&&multiRaise&&!inputInteracted&&/*#__PURE__*/_jsx(\"button\",{className:\"check\",onClick:()=>handlePlayerAction('betres',clientBetAmount),children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Bet: $\",clientBetAmount]})}),!playerFolded&&!betResBoolean&&/*#__PURE__*/_jsx(\"button\",{className:\"bet\",onClick:()=>handlePlayerAction('bet',clientBetAmount),children:/*#__PURE__*/_jsx(\"p\",{children:\"Bet\"})}),!playerFolded&&betResBoolean&&!raiseLimitReached&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"number-dragging\",children:/*#__PURE__*/_jsx(\"p\",{children:betDraggingValue})}),/*#__PURE__*/_jsx(\"input\",{className:\"draggable\",type:\"range\",value:Number(clientBetAmount),min:playerMoney>minRaise?minRaise:playerMoney,max:playerMoney,onInput:handleInput,onChange:e=>{setClientBetAmount(Number(e.target.value));setInputInteracted(true);// Set to true on change\n},onClick:()=>setInputInteracted(true)// Set to true on click\n,placeholder:\"Raise Amount\"})]}),!playerFolded&&betResBoolean&&inputInteracted&&/*#__PURE__*/_jsx(\"button\",{className:\"bet\",onClick:()=>handlePlayerAction('raise',Number(clientBetAmount)),children:/*#__PURE__*/_jsx(\"p\",{children:\"Raise\"})}),!playerFolded&&/*#__PURE__*/_jsx(\"button\",{className:\"fold\",onClick:()=>handlePlayerAction('fold'),children:/*#__PURE__*/_jsx(\"p\",{children:\"Fold\"})})]}),!isTurn&&/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"flop\",children:tableCards.map((card,index)=>/*#__PURE__*/_jsx(\"img\",{src:cardImages[\"\".concat(card.name,\"_\").concat(card.suit)],alt:\"\".concat(card.name,\" of \").concat(card.suit)},index))})]});};export default Game;","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","io","v4","uuidv4","twoSpades","threeSpades","fourSpades","fiveSpades","sixSpades","sevenSpades","eightSpades","nineSpades","tenSpades","jackSpades","queenSpades","kingSpades","aceSpades","twoHearts","threeHearts","fourHearts","fiveHearts","sixHearts","sevenHearts","eightHearts","nineHearts","tenHearts","jackHearts","queenHearts","kingHearts","aceHearts","twoDiamonds","threeDiamonds","fourDiamonds","fiveDiamonds","sixDiamonds","sevenDiamonds","eightDiamonds","nineDiamonds","tenDiamonds","jackDiamonds","queenDiamonds","kingDiamonds","aceDiamonds","twoClubs","threeClubs","fourClubs","fiveClubs","sixClubs","sevenClubs","eightClubs","nineClubs","tenClubs","jackClubs","queenClubs","kingClubs","aceClubs","cardBack","betSound","checkSound","foldSound","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SERVER_URL","socket","Game","cardImages","playersInGame","setPlayersInGame","playerId","setPlayerId","gameState","setGameState","gameId","navigate","playerHand","setPlayerHand","tableCards","setTableCards","isTurn","setIsTurn","gameStatus","setGameStatus","gameStarted","setGameStarted","playerMoney","setPlayerMoney","turnCount","setTurnCount","turnCount2","setTurnCount2","turnCount3","setTurnCount3","pot","setPot","clientBetAmount","setClientBetAmount","cards","setCards","runIndex","setRunIndex","runIndex2","setRunIndex2","runIndex3","setRunIndex3","betResBoolean","setBetResBoolean","checkNoShow","setCheckNoShow","clientRaiseAmount","setClientRaiseAmount","multiRaise","setMultiRaise","dealer","setDealer","inputInteracted","setInputInteracted","noLimitIndex","setNoLimitIndex","plusBool","setPlusBool","interRaise","setInterRaise","raised","setRaised","justOneRaise","setJustOneRaise","secondRaise","setSecondRaise","abstractRaise","setAbstractRaise","minusBetBoolean","setMinusBetBoolean","brSecRaise","setBrSecRaise","lastBetRezz","setLastBetRezz","SB","setSB","isSmallBlind","setIsSmallBlind","isBigBlind","setIsBigBlind","stopB1","setStopB1","stopB2","setStopB2","titkiStopper","setTitkiStopper","stopper99","setStopper99","playerFolded","setPlayerFolded","foldedChipsSave","setFoldedChipsSave","playerMarkedReady","setPlayerMarkedReady","betDraggingValue","setBetDraggingValue","raiseDraggingValue","setRaiseDraggingValue","minRaise","setMinRaise","raiseLimitReached","setRaiseLimitReached","input2Interacted","setInput2Interacted","everyonesChips","setEveryonesChips","copied","setCopied","combinedCards","setCombinedCards","myHandQuant","setMyHandQuant","showOtherCards","setShowOtherCards","storePot","setStorePot","everyonesHand","setEveryonesHand","interBet","setInterBet","interIndex","setInterIndex","prevCount","prevCount2","prevCount3","localStorage","getItem","setItem","emit","roomId","handleGameUpdated","_ref","game","playersIds","console","log","concat","on","dealtCards","playerChips","newEveryonesChips","Array","length","fill","flopCards","newCards","slice","turnCards","riverCards","_ref2","titkiBig","Number","_ref3","newPot2","betAmount","blindSter","_ref4","currentTurnPlayerId","_ref5","potBB","_ref6","potSB","playSound","_ref7","_ref8","isDealer","_ref9","count","total","_ref10","_ref11","numericBetAmount","updatedPot","_ref12","_ref13","_ref14","noLimitPot","_ref15","_ref16","ir","_ref17","_ref18","hhGG","_ref19","seccyBR","_ref20","potPlus","_ref21","upRaise","_ref22","chipsMinus","_ref23","chipsMinus2","_ref24","twoPtwoR","_ref25","tootsiePlus","_ref26","chippyMin","_ref27","chippyM","_ref28","cPMM","_ref29","zzTT","_ref30","secSEC","_ref31","vvPP","_ref32","aaTT","_ref33","ppPP","_ref34","ddDD","_ref35","xXX","_ref36","bBB","_ref37","skiPot","_ref38","lll2","_ref39","lll3","_ref40","lll35","_ref41","rrr3","_ref42","lll4","_ref43","lll22","_ref44","lll223","_ref45","preflop008","_ref46","preflop0082","_ref47","preflop0085","_ref48","rr2235","_ref49","preflop149999","_ref50","preflop31","_ref51","tripprefin","_ref52","preflopXX","_ref53","tgTG","_ref54","preflopOO","_ref55","preflop1454","_ref56","zXY","_ref57","jjII","_ref58","jjKK","_ref59","ccCC","_ref60","ccCC2","_ref61","yyTT","_ref62","jjKK2","_ref63","ccCC3","_ref64","yyTT33","_ref65","yyTTKK","cashUpdate","_ref66","oneChi","_ref67","tootsieD","_ref68","thatCase","_ref69","folderfourp09","_ref70","for4withonefold","_ref71","seccyBR20","_ref72","twoPtwoR33","_ref73","jjII233","_ref74","trippyFins","_ref75","_ref76","criTri","_ref77","_ref78","minRaiseEqBB","newCombinedCards","namesForStraight","name","suit","handScore","twoCardScore","playerHandCardNames","map","card","i","includes","tableCardNames","tableCardSuits","tableCardNameCounts","reduce","counts","tableCardSuitCounts","uniqueTableCardNames","Object","keys","uniqueTableCardSuits","tablePairCardNames","filter","setTableCardNames","twoPairTableCardNames","fourTableCardNames","fullHousetableCardNamePairs","flushTableCardSuits","cardNames","cardSuits","cardNameCounts","cardSuitCounts","uniqueCardNames","pairCardNames","setCardNames","twoPairCardNames","fourCardNames","fullHouseCardNamePairs","flushCardSuits","flushCardSuitsplusone","flushCardSuitsplustwo","pairCardName","find","pairIndex","indexOf","flush","pair","twopair","set","fourofakind","straightflush","royalflush","straight","sortedNamesForStraight","sort","subList","sortedSubList","isStraight","every","index","isFullHousePossible","_ref79","highestHandScore","numPlayersWithHighestScore","allHands","_ref80","playerI","updatedEveryonesHand","playerIndex","window","addEventListener","event","newPlayerChips","whoseChips","_ref81","newChipsRightBack","whosMoney","prevChips","updatedChips","soundUrl","audio","Audio","play","off","handlePlayerAction","actionType","numericRaiseAmount","numericPlayerMoney","numericPot","actionPayload","action","potski","markPlayerReady","handleInput","e","target","value","copyToClipboard","navigator","clipboard","writeText","location","href","setTimeout","className","children","onClick","_","style","width","height","backgroundColor","margin","display","flexDirection","justifyContent","textAlign","src","alt","type","min","max","onInput","onChange","placeholder"],"sources":["C:/Users/dvp07/finalpoker/client/src/Game.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nimport twoSpades   from  \"./assets/cards/SPADES_2.svg\";\r\nimport threeSpades from  \"./assets/cards/SPADES_3.svg\";\r\nimport fourSpades  from  \"./assets/cards/SPADES_4.svg\";\r\nimport fiveSpades  from  \"./assets/cards/SPADES_5.svg\";\r\nimport sixSpades   from  \"./assets/cards/SPADES_6.svg\";\r\nimport sevenSpades from  \"./assets/cards/SPADES_7.svg\";\r\nimport eightSpades from  \"./assets/cards/SPADES_8.svg\";\r\nimport nineSpades  from  \"./assets/cards/SPADES_9.svg\";\r\nimport tenSpades   from  \"./assets/cards/SPADES_10.svg\";\r\nimport jackSpades  from  \"./assets/cards/SPADES_J.svg\";\r\nimport queenSpades from  \"./assets/cards/SPADES_Q.svg\";\r\nimport kingSpades  from  \"./assets/cards/SPADES_K.svg\";\r\nimport aceSpades   from  \"./assets/cards/SPADES_A.svg\";\r\n\r\nimport twoHearts  from    \"./assets/cards/HEARTS_2.svg\";\r\nimport threeHearts  from  \"./assets/cards/HEARTS_3.svg\";\r\nimport fourHearts  from   \"./assets/cards/HEARTS_4.svg\";\r\nimport fiveHearts  from   \"./assets/cards/HEARTS_5.svg\";\r\nimport sixHearts  from    \"./assets/cards/HEARTS_6.svg\";\r\nimport sevenHearts  from  \"./assets/cards/HEARTS_7.svg\";\r\nimport eightHearts from   \"./assets/cards/HEARTS_8.svg\";\r\nimport nineHearts from    \"./assets/cards/HEARTS_9.svg\";\r\nimport tenHearts from     \"./assets/cards/HEARTS_10.svg\";\r\nimport jackHearts from    \"./assets/cards/HEARTS_J.svg\";\r\nimport queenHearts from   \"./assets/cards/HEARTS_Q.svg\";\r\nimport kingHearts from    \"./assets/cards/HEARTS_K.svg\";\r\nimport aceHearts from     \"./assets/cards/HEARTS_A.svg\";\r\n\r\nimport twoDiamonds from    \"./assets/cards/DIAMONDS_2.svg\";\r\nimport threeDiamonds from  \"./assets/cards/DIAMONDS_3.svg\";\r\nimport fourDiamonds from   \"./assets/cards/DIAMONDS_4.svg\";\r\nimport fiveDiamonds from   \"./assets/cards/DIAMONDS_5.svg\";\r\nimport sixDiamonds from    \"./assets/cards/DIAMONDS_6.svg\";\r\nimport sevenDiamonds from  \"./assets/cards/DIAMONDS_7.svg\";\r\nimport eightDiamonds from  \"./assets/cards/DIAMONDS_8.svg\";\r\nimport nineDiamonds from   \"./assets/cards/DIAMONDS_9.svg\";\r\nimport tenDiamonds from    \"./assets/cards/DIAMONDS_10.svg\";\r\nimport jackDiamonds from   \"./assets/cards/DIAMONDS_J.svg\";\r\nimport queenDiamonds from  \"./assets/cards/DIAMONDS_Q.svg\";\r\nimport kingDiamonds from   \"./assets/cards/DIAMONDS_K.svg\";\r\nimport aceDiamonds from    \"./assets/cards/DIAMONDS_A.svg\";\r\n\r\nimport twoClubs from    \"./assets/cards/CLUBS_2.svg\";\r\nimport threeClubs from  \"./assets/cards/CLUBS_3.svg\";\r\nimport fourClubs from   \"./assets/cards/CLUBS_4.svg\";\r\nimport fiveClubs from   \"./assets/cards/CLUBS_5.svg\";\r\nimport sixClubs from    \"./assets/cards/CLUBS_6.svg\";\r\nimport sevenClubs from  \"./assets/cards/CLUBS_7.svg\";\r\nimport eightClubs from  \"./assets/cards/CLUBS_8.svg\";\r\nimport nineClubs from   \"./assets/cards/CLUBS_9.svg\";\r\nimport tenClubs from    \"./assets/cards/CLUBS_10.svg\";\r\nimport jackClubs from   \"./assets/cards/CLUBS_J.svg\";\r\nimport queenClubs from  \"./assets/cards/CLUBS_Q.svg\";\r\nimport kingClubs from   \"./assets/cards/CLUBS_K.svg\";\r\nimport aceClubs from    \"./assets/cards/CLUBS_A.svg\";\r\n\r\nimport cardBack from \"./assets/cards/BACK.svg\";\r\n\r\nimport betSound from \"./assets/betSound.mp3\";\r\nimport checkSound from \"./assets/checkSound.mp3\";\r\nimport foldSound from \"./assets/foldSound.mp3\";\r\n\r\n\r\n\r\n\r\nconst SERVER_URL = \"https://pwfpwfpwf-3f02d2a899b2.herokuapp.com/\"; \r\nconst socket = io(SERVER_URL);\r\n\r\nfunction Game() {\r\n  const cardImages = {\r\n\"two_spades\": twoSpades,\r\n\"three_spades\": threeSpades,\r\n\"four_spades\": fourSpades,       \r\n\"five_spades\": fiveSpades,\r\n\"six_spades\": sixSpades,\r\n\"seven_spades\": sevenSpades,\r\n\"eight_spades\": eightSpades,\r\n\"nine_spades\": nineSpades,\r\n\"ten_spades\": tenSpades,\r\n\"jack_spades\": jackSpades, \r\n\"queen_spades\": queenSpades,\r\n\"king_spades\": kingSpades,\r\n\"ace_spades\": aceSpades,\r\n\"two_hearts\" : twoHearts,\r\n\"three_hearts\": threeHearts,\r\n\"four_hearts\"  : fourHearts,\r\n\"five_hearts\"  : fiveHearts,\r\n\"six_hearts\"  : sixHearts,\r\n\"seven_hearts\" : sevenHearts,\r\n\"eight_hearts\" : eightHearts,\r\n\"nine_hearts\"  : nineHearts,\r\n\"ten_hearts\"  : tenHearts,\r\n\"jack_hearts\"  : jackHearts,\r\n\"queen_hearts\" : queenHearts,\r\n\"king_hearts\"  : kingHearts,\r\n\"ace_hearts\"  : aceHearts,\r\n\"two_diamonds\": twoDiamonds,\r\n\"three_diamonds\": threeDiamonds,\r\n\"four_diamonds\": fourDiamonds,\r\n\"five_diamonds\": fiveDiamonds,\r\n\"six_diamonds\": sixDiamonds,\r\n\"seven_diamonds\": sevenDiamonds,\r\n\"eight_diamonds\": eightDiamonds,\r\n\"nine_diamonds\": nineDiamonds,\r\n\"ten_diamonds\": tenDiamonds,\r\n\"jack_diamonds\": jackDiamonds,\r\n\"queen_diamonds\": queenDiamonds,\r\n\"king_diamonds\": kingDiamonds,\r\n\"ace_diamonds\": aceDiamonds,\r\n\"two_clubs\"   : twoClubs,\r\n\"three_clubs\" :threeClubs,\r\n\"four_clubs\" : fourClubs,\r\n\"five_clubs\" : fiveClubs,\r\n\"six_clubs\" : sixClubs,\r\n\"seven_clubs\" : sevenClubs,\r\n\"eight_clubs\" : eightClubs,\r\n\"nine_clubs\" : nineClubs,\r\n\"ten_clubs\" : tenClubs,\r\n\"jack_clubs\" : jackClubs,\r\n\"queen_clubs\" : queenClubs,\r\n\"king_clubs\" : kingClubs,\r\n\"ace_clubs\"   : aceClubs\r\n  };\r\n\r\n  const [playersInGame, setPlayersInGame] = useState([]);\r\n  const [playerId, setPlayerId] = useState([]);\r\n  const [gameState, setGameState] = useState(null);\r\n  const { gameId } = useParams(); // Get gameId from URL parameters\r\n  const navigate = useNavigate();\r\n  const [playerHand, setPlayerHand] = useState([]);\r\n  const [tableCards, setTableCards] = useState([]); // If you plan to handle flop, turn, river updates\r\n  const [isTurn, setIsTurn] = useState(false);\r\n  const [gameStatus, setGameStatus] = useState('');\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n  const [playerMoney, setPlayerMoney] = useState(0); // Initialize with default 1000 chips\r\n  const [turnCount, setTurnCount] = useState(0);\r\n  const [turnCount2, setTurnCount2] = useState(0);\r\n  const [turnCount3, setTurnCount3] = useState(0);\r\n  const [pot, setPot] = useState(0);\r\n  const [clientBetAmount, setClientBetAmount] = useState(0); \r\n  const [cards, setCards] = useState([]); // Assuming you want to keep track of all dealt cards\r\n  const [runIndex, setRunIndex] = useState(0);\r\n  const [runIndex2, setRunIndex2] = useState(0);\r\n  const [runIndex3, setRunIndex3] = useState(0);\r\n  const [betResBoolean, setBetResBoolean] = useState(false);\r\n  const [checkNoShow, setCheckNoShow] = useState(false);\r\n  const [clientRaiseAmount, setClientRaiseAmount] = useState(0);\r\n  const [multiRaise, setMultiRaise] = useState(false);\r\n  const [dealer, setDealer] = useState(0);\r\n  const [inputInteracted, setInputInteracted] = useState(false);\r\n  const [noLimitIndex, setNoLimitIndex] = useState(0);\r\n  const [plusBool, setPlusBool] = useState(false);\r\n  const [interRaise, setInterRaise] = useState(0);\r\n  const [raised, setRaised] = useState(false);\r\n  const [justOneRaise, setJustOneRaise] = useState(false);\r\n  const [secondRaise, setSecondRaise] = useState(false);\r\n  const [abstractRaise, setAbstractRaise] = useState(false);\r\n  const [minusBetBoolean, setMinusBetBoolean] = useState(false);\r\n  const [brSecRaise, setBrSecRaise] = useState(0);\r\n  const [lastBetRezz, setLastBetRezz] = useState(0);\r\n  const [SB, setSB] = useState(0);\r\n  const [isSmallBlind, setIsSmallBlind] = useState(false);\r\n  const [isBigBlind, setIsBigBlind] = useState(false);\r\n  const [stopB1, setStopB1] = useState(0);\r\n  const [stopB2, setStopB2] = useState(0);\r\n  const [titkiStopper, setTitkiStopper] = useState(0);\r\n  const [stopper99, setStopper99] = useState(0);\r\n  const [playerFolded, setPlayerFolded] = useState(false);\r\n  const [foldedChipsSave, setFoldedChipsSave] = useState(0);\r\n  const [playerMarkedReady, setPlayerMarkedReady] = useState(false);\r\n  const [betDraggingValue, setBetDraggingValue] = useState(0);\r\n  const [raiseDraggingValue, setRaiseDraggingValue] = useState(0);\r\n  const [minRaise, setMinRaise] = useState(0);\r\n  const [raiseLimitReached, setRaiseLimitReached] = useState(false);\r\n  const [input2Interacted, setInput2Interacted] = useState(false);\r\n  const [everyonesChips, setEveryonesChips] = useState([]);\r\n  const [copied, setCopied] = useState(false);\r\n  const [combinedCards, setCombinedCards]= useState([]);\r\n  const [myHandQuant, setMyHandQuant] = useState(0);\r\n  const [showOtherCards, setShowOtherCards] = useState(false);\r\n  const [storePot, setStorePot] = useState(0);\r\n  const [everyonesHand, setEveryonesHand] = useState ([]);\r\n\r\n  const [interBet, setInterBet] = useState(0);\r\n  const [interIndex, setInterIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (isTurn) {\r\n      // Increment turnCount each time isTurn becomes true\r\n      setTurnCount(prevCount => prevCount + 1);\r\n    } \r\n    if (turnCount >= 1){\r\n      if (isTurn) {\r\n      setTurnCount2(prevCount2 => prevCount2 + 1)\r\n      }\r\n    }\r\n    if (turnCount2 >= 1){\r\n      if (isTurn) {\r\n      setTurnCount3(prevCount3 => prevCount3 + 1)\r\n      }\r\n    }\r\n    \r\n  }, [isTurn]);\r\n  \r\n  useEffect(() => {\r\n    let playerId = localStorage.getItem('playerId');\r\n    if (!playerId) {\r\n      playerId = uuidv4();\r\n      localStorage.setItem('playerId', playerId);\r\n    }\r\n    setPlayerId(playerId);\r\n\r\n    socket.emit('joinGame', { gameId, playerId });\r\n\r\n    socket.emit('joinRoom', { roomId: gameId });\r\n\r\n    const handleGameUpdated = ({ game }) => {\r\n      setGameState(game);\r\n      setPlayersInGame(game.playersIds);\r\n      console.log(`players in game are: ${playersInGame}`)\r\n    };\r\n\r\n\r\n    socket.on('gameUpdated', handleGameUpdated);\r\n\r\n    socket.on('cardsDealt', (dealtCards) => {\r\n      setPlayerHand(dealtCards);\r\n      });\r\n\r\n    socket.on('chipsDealt', (playerChips) => {\r\n      setPlayerMoney(playerChips);\r\n      const newEveryonesChips = Array(playersInGame.length).fill(5000);\r\n      setEveryonesChips(newEveryonesChips);\r\n    })\r\n    socket.on('noCheck', ()=> {\r\n      setCheckNoShow(true);\r\n    }); \r\n    socket.on('onlyBetRes', () => {\r\n      setBetResBoolean(true);\r\n    });\r\n\r\n    socket.on('flopDealt', (flopCards) => {\r\n      if(runIndex <= 1){\r\n        const newCards = [...cards, ...flopCards];\r\n        setCards(newCards);\r\n        setTableCards(newCards.slice(0, 3));\r\n        console.log('flop dealt');\r\n        setRunIndex(runIndex + 1);      \r\n      }\r\n      });\r\n      socket.on('goFlop', () => {\r\n        socket.emit('requestFlop', { gameId });\r\n        setRaiseLimitReached(false);\r\n        setInput2Interacted(false);\r\n        setCheckNoShow(false);\r\n        setBetResBoolean(false);\r\n        setClientBetAmount(0);\r\n        setClientRaiseAmount(0);\r\n        setMultiRaise(false);\r\n        setInputInteracted(false);\r\n        setNoLimitIndex(0);\r\n        setInterBet(0);\r\n        setPlusBool(false);\r\n        setInterRaise(0);\r\n        setRaised(false);\r\n        setJustOneRaise(false);\r\n        setSecondRaise(false);\r\n        setAbstractRaise(0);\r\n        setMinusBetBoolean(false);\r\n        setBrSecRaise(0);\r\n        setLastBetRezz(false);\r\n      });\r\n    socket.on('turnDealt', (turnCards) => {\r\n      if(runIndex2 <= 1){\r\n      const newCards = [...cards, ...turnCards];\r\n      setCards(newCards);\r\n      setTableCards(newCards.slice(0, 4));\r\n      console.log('turn dealt');\r\n      setRunIndex2(runIndex2 + 1);\r\n      }\r\n\r\n    });\r\n    socket.on('goTurn', () => {\r\n      socket.emit('requestTurn', { gameId });\r\n      setRaiseLimitReached(false);\r\n      setInput2Interacted(false);\r\n      setCheckNoShow(false);\r\n      setBetResBoolean(false);\r\n      setClientBetAmount(0);\r\n      setClientRaiseAmount(0);\r\n      setMultiRaise(false);\r\n      setInputInteracted(false);\r\n      setNoLimitIndex(0);\r\n      setInterBet(0);\r\n      setPlusBool(false);\r\n      setInterRaise(0);\r\n      setRaised(false);\r\n      setJustOneRaise(false);\r\n      setSecondRaise(false);\r\n      setAbstractRaise(0);\r\n      setMinusBetBoolean(false);\r\n      setBrSecRaise(0);\r\n      setLastBetRezz(false);\r\n\r\n        });\r\n    \r\n    socket.on('riverDealt', (riverCards) => {\r\n      if(runIndex3 <= 1){\r\n      const newCards = [...cards, ...riverCards];\r\n      setCards(newCards);\r\n      setTableCards(newCards.slice(0, 5));\r\n      console.log('river dealt');\r\n      setRunIndex3(runIndex3 + 1);\r\n      }\r\n\r\n    });\r\n    socket.on('goRiver', () => {\r\n      socket.emit('requestRiver', { gameId });\r\n      setRaiseLimitReached(false);\r\n      setInput2Interacted(false);\r\n      setCheckNoShow(false);\r\n      setBetResBoolean(false);\r\n      setClientBetAmount(0);\r\n      setClientRaiseAmount(0);\r\n      setMultiRaise(false);\r\n      setInputInteracted(false);\r\n      setNoLimitIndex(0);\r\n      setInterBet(0);\r\n      setPlusBool(false);\r\n      setInterRaise(0);\r\n      setRaised(false);\r\n      setJustOneRaise(false);\r\n      setSecondRaise(false);\r\n      setAbstractRaise(0);\r\n      setMinusBetBoolean(false);\r\n      setBrSecRaise(0);\r\n      setLastBetRezz(false);\r\n    });\r\n    socket.on('titkiBig', ({titkiBig}) => {\r\n      if (titkiStopper<1 && stopper99 <1 && isTurn){\r\n      setIsSmallBlind(false);\r\n      setIsBigBlind(false);\r\n      setClientBetAmount(Number(titkiBig));\r\n      setTitkiStopper(titkiStopper+1);\r\n    }\r\n    });\r\n    socket.on('newPot2', ({newPot2, betAmount}) => {\r\n      setPot(Number(newPot2));\r\n      socket.emit('blindSter', {blindSter:Number(betAmount), gameId});\r\n    });\r\n    socket.on('updateTurnAfterBlinds', ({ isTurn, playerId: currentTurnPlayerId }) => {\r\n      setIsSmallBlind(false);\r\n      setIsBigBlind(false);\r\n      if (playerId === currentTurnPlayerId) {\r\n        setIsTurn(isTurn);\r\n        setBetResBoolean(true);\r\n        setCheckNoShow(true);\r\n        console.log('after blinds player');\r\n        console.log('isTurn:', isTurn);\r\n      }\r\n    });  \r\n    socket.on('updateTurnBigBlind', ({ isTurn, playerId: currentTurnPlayerId }) => {\r\n      if (playerId === currentTurnPlayerId) {\r\n        setIsTurn(isTurn);\r\n        setIsSmallBlind(false);\r\n        if (isBigBlind && isTurn && stopB2<1) {\r\n          if (playerMoney>=50 && stopper99<1){\r\n            console.log(`player money:  ${playerMoney} `)\r\n          setPlayerMoney(playerMoney - 50);\r\n          console.log(`player money:  ${playerMoney} `)\r\n          socket.emit('potBB', {potBB: 50, gameId});\r\n          setStopper99(stopper99+1);\r\n          setIsTurn(false);\r\n          console.log(`player money:  ${playerMoney} `)\r\n        } else if (playerMoney<50 && stopper99<1){\r\n          socket.emit('potBB', {potBB: playerMoney, gameId});\r\n          setPlayerMoney(playerMoney-playerMoney);\r\n          setStopper99(stopper99+1);\r\n          setIsTurn(false);\r\n          console.log(`player money:  ${playerMoney} 2`)\r\n        }\r\n        console.log(`player money:  ${playerMoney} 3`)\r\n          setStopB2(stopB2+1);\r\n          setIsBigBlind(false); \r\n          console.log(`player money:  ${playerMoney} 4`)\r\n        }\r\n        console.log(`player money:  ${playerMoney} 5`)\r\n        console.log('Update turn event received');\r\n        console.log('isBigBlind:', isBigBlind);\r\n        console.log('isTurn:', isTurn);\r\n      }\r\n    });  \r\n    socket.on('updateTurnSmallBlind', ({ isTurn, playerId: currentTurnPlayerId }) => {\r\n      if (playerId === currentTurnPlayerId) {\r\n        setIsTurn(isTurn);\r\n        if (isSmallBlind && isTurn && stopB1<1) {\r\n          if (playerMoney>25){\r\n          setPlayerMoney(playerMoney - 25);\r\n          setSB(25);\r\n          socket.emit('potSB', {potSB: 25, gameId});\r\n          setIsTurn(false);\r\n        } else {\r\n          socket.emit('potSB', {potSB: playerMoney, gameId});\r\n          setPlayerMoney(playerMoney-playerMoney);\r\n          setIsTurn(false);\r\n        }\r\n          setStopB1(stopB1+1);\r\n          setIsSmallBlind(false);\r\n          playSound(betSound);\r\n        }\r\n        \r\n        console.log('Update turn event received');\r\n        console.log('isSmallBlind:', isSmallBlind);\r\n        console.log('isTurn:', isTurn);\r\n      }\r\n    });  \r\n    socket.on('updateTurn', ({ isTurn, playerId: currentTurnPlayerId }) => {\r\n      if (playerId === currentTurnPlayerId) {\r\n        setIsTurn(isTurn);\r\n      }\r\n    });\r\n  socket.on('didRaise', () => {\r\n    setRaised(true);\r\n});\r\n\r\n    socket.on('dealerEmitted', ({isDealer}) => {\r\n      setDealer(Number(isDealer));\r\n    });\r\n      // Listen for 'playersReady' event to update UI with ready count\r\n    socket.on('playersReady', ({ count, total }) => {\r\n      // Update your UI to show something like \"1/2 Players Ready\"\r\n      setGameStatus(`: ${count}/${total} Players Ready`);\r\n      setPlayerMarkedReady(true);\r\n    });\r\n\r\n    // Listen for 'gameStarted' to proceed to the game view\r\n    socket.on('gameStarted', ({ gameId }) => {\r\n      setPlayerMarkedReady(false);\r\n      socket.emit('startGame', { gameId });\r\n      console.log('Game has started');\r\n      setGameStarted(true);\r\n});\r\n    socket.on('potUpdated', ({ betAmount }) => {\r\n      console.log(`Received betAmountpotUpd:`, betAmount, `Current pot:`, pot);\r\n      const numericBetAmount = Number(betAmount);\r\n    // Assuming betAmount is the amount to add to the current pot\r\n    const updatedPot = Number(pot) + Number(betAmount);\r\n    console.log(`Updated pot:`, updatedPot);\r\n    if (!playerFolded){\r\n    setClientBetAmount(numericBetAmount);\r\n    }\r\n    setPot(Number(updatedPot));\r\n});\r\nsocket.on('betAfterFold', ({ betAmount }) => {\r\n  console.log(`Received betAmountAfterFold:`, betAmount);\r\n  const numericBetAmount = Number(betAmount);\r\nsetClientBetAmount(numericBetAmount);\r\n});\r\nsocket.on('betAfterFold2', ({ betAmount }) => {\r\n  console.log(`Received betAmount:`, betAmount);\r\n  const numericBetAmount = 0;\r\nsetClientBetAmount(0);\r\n});\r\nsocket.on('raiseEmitted', ({ betAmount }) => {\r\n  console.log(`Received betAmountRaiseEmitted:`, betAmount, `Current pot:`, pot);\r\n  const numericBetAmount = Number(betAmount);\r\n// Assuming betAmount is the amount to add to the current pot\r\nconst updatedPot = Number(pot) + Number(betAmount);\r\nconsole.log(`Updated pot:`, updatedPot);\r\nif (noLimitIndex===1){\r\nsetMultiRaise(false);\r\nconst noLimitPot = Number(pot) + numericBetAmount;\r\nif (!playerFolded){\r\nsetClientBetAmount (numericBetAmount);\r\n}\r\nsetPot(pot + numericBetAmount);\r\n}\r\n else if (noLimitIndex>=2){\r\n  if (interIndex<=1){\r\n    setMultiRaise(true);\r\n    if (!playerFolded){\r\n      setClientBetAmount (numericBetAmount);\r\n      }\r\n    setPot(pot + numericBetAmount);\r\n    setInterIndex(interIndex+1);\r\n  }else{\r\n    if (plusBool){\r\n      console.log(`Updated pot:`, updatedPot);\r\n      if (!playerFolded){\r\n        setClientBetAmount (numericBetAmount);\r\n        }\r\n      setPot(Number(pot)+numericBetAmount);\r\n        }\r\n    else{    \r\n    setMultiRaise(true);\r\n    if (!playerFolded){\r\n      setClientBetAmount (numericBetAmount);\r\n      }\r\n    setPot(pot + numericBetAmount);\r\n  }\r\n}\r\n  }\r\nelse{\r\n  if (plusBool){\r\nconsole.log(`Updated pot:`, updatedPot);\r\nif (!playerFolded){\r\n  setClientBetAmount (numericBetAmount);\r\n  }\r\nsetPot(Number(pot)+numericBetAmount);\r\n  }\r\n  else{\r\n  console.log(`Updated pot:`, updatedPot);\r\n  if (!playerFolded){\r\n    setClientBetAmount (numericBetAmount);\r\n    }\r\nsetPot(Number(pot)+numericBetAmount);\r\n  }\r\n}\r\n});\r\nsocket.on('raisecTwo', ({ betAmount }) => {\r\n  setPlusBool(true);\r\n});\r\nsocket.on('interRaiseBetres', ({ ir })=>{\r\n  setAbstractRaise(Number(ir));\r\n});\r\nsocket.on('onlyOneRaise',() => {\r\n  setJustOneRaise(true);\r\n});\r\nsocket.on('twoRaise',() => {\r\n  setSecondRaise(true);\r\n});\r\nsocket.on('minusBet',() => {\r\n  setMinusBetBoolean(true);\r\n});\r\nsocket.on('betRezzySecRaise',({brSecRaise}) => {\r\n  setBrSecRaise(Number(brSecRaise));\r\n});\r\n/*socket.on('lastBetRezzy',({betRezzy}) => {\r\n  setLastBetRezz(true);\r\n  if (stopIndex<1 && interBet === 0 && interRaise === 0 && isTurn){\r\n  setPlayerMoney(playerMoney-Number(betRezzy));\r\n  setStopIndex(stopIndex+1);\r\n  console.log(`secBr:${secBr}`);\r\n}\r\n  setLastBetRezz(false);\r\n});*/\r\n  socket.on ('hhGG', ({hhGG}) => {\r\n    if (interBet === 0 && interRaise === 0 && isTurn){\r\n    setPlayerMoney(playerMoney-Number(hhGG));\r\n    }else{\r\n      setPlayerMoney(playerMoney+0);\r\n    }\r\n  });\r\n  socket.on ('seccyBR', ({seccyBR}) => {\r\n    if (interBet === 0 && interRaise === 0 && !playerFolded){\r\n    setPlayerMoney(playerMoney-Number(seccyBR));\r\n    }else{\r\n      setPlayerMoney(playerMoney+0);\r\n    }\r\n  });\r\n  \r\nsocket.on('potPlus', ({potPlus}) => {\r\n  setPot(pot+Number(potPlus));\r\n});\r\nsocket.on('upRaise', ({upRaise}) => {\r\n  if (interBet === 0 && interRaise === 0 && isTurn){\r\n  setPlayerMoney(playerMoney+0);\r\n  }\r\n});\r\nsocket.on('chipsMinus', ({chipsMinus}) =>{\r\n  if (interBet === 0 && interRaise !== 0){\r\n  setPlayerMoney(playerMoney-Number(chipsMinus));\r\n    }\r\n});\r\nsocket.on('chipsMinus2', ({chipsMinus2}) => {\r\n  if (interBet !== 0 && interRaise === 0){\r\n  setPlayerMoney(playerMoney-Number(chipsMinus2));\r\n  }else{\r\n    setPlayerMoney(playerMoney+0);\r\n  }\r\n});\r\nsocket.on('twoPtwoR', ({twoPtwoR}) => {\r\n  if (interBet !== 0 && interRaise === 0){\r\n    setPlayerMoney(playerMoney-Number(twoPtwoR));\r\n  }else{\r\n    setPlayerMoney(playerMoney+0);\r\n  }\r\n});\r\nsocket.on('tootsiePlus', ({tootsiePlus}) => {\r\n  if (interBet === 0 && interRaise !== 0 && isTurn){\r\n    setPlayerMoney(playerMoney-Number(tootsiePlus));\r\n  }else{\r\n    setPlayerMoney(playerMoney+0);\r\n  }\r\n});\r\nsocket.on('chippyMin', ({chippyMin}) => {\r\n  if (interBet === 0 && interRaise === 0){\r\n    setPlayerMoney(playerMoney-Number(chippyMin));\r\n  }else{\r\n    setPlayerMoney(playerMoney+0);\r\n  }\r\n});\r\nsocket.on('chippyM', ({chippyM}) => {\r\n  if (interBet === 0 && interRaise === 0 && isTurn){\r\n    setPlayerMoney(playerMoney-Number(chippyM));\r\n  }else{\r\n    setPlayerMoney(playerMoney+0);\r\n  }\r\n});\r\nsocket.on('cPMM', ({cPMM}) => {\r\n  if (interBet === 0 && interRaise !== 0 && isTurn){\r\n    setPlayerMoney(playerMoney-Number(cPMM));\r\n  }else{\r\n    setPlayerMoney(playerMoney+0);\r\n  }\r\n});\r\nsocket.on('zzTT', ({zzTT}) => {\r\n  if (interBet !== 0 && interRaise === 0 && isTurn){\r\n    setPlayerMoney(playerMoney-Number(zzTT));\r\n  }else{\r\n    setPlayerMoney(playerMoney+0);\r\n  }\r\n  setIsTurn(false);\r\n});\r\nsocket.on ('secSEC', ({secSEC}) => {\r\n  if (interBet === 0 && interRaise !== 0 && isTurn){\r\n  setPlayerMoney(playerMoney-Number(secSEC));\r\n  }else{\r\n    setPlayerMoney(playerMoney+0);\r\n  }\r\n  setIsTurn(false);\r\n});\r\nsocket.on ('vvPP', ({vvPP}) => {\r\n  if (interBet === 0 && interRaise !== 0 && isTurn){\r\n  setPlayerMoney(playerMoney-Number(vvPP));\r\n  }else{\r\n    setPlayerMoney(playerMoney+0);\r\n  }\r\n  setIsTurn(false);\r\n});\r\nsocket.on ('aaTT', ({aaTT}) => {\r\n  if (interBet === 0 && interRaise === 0 && isTurn){\r\n  setPlayerMoney(playerMoney-Number(aaTT));\r\n  }else{\r\n    setPlayerMoney(playerMoney+0);\r\n  }\r\n  setIsTurn(false);\r\n});\r\nsocket.on ('ppPP', ({ppPP}) => {\r\n  if (interBet !== 0 && interRaise === 0 && isTurn){\r\n  setPlayerMoney(playerMoney-Number(ppPP));\r\n  }else{\r\n    setPlayerMoney(playerMoney+0);\r\n  }\r\n  setIsTurn(false);\r\n});\r\nsocket.on ('ddDD', ({ddDD}) => {\r\n  if (interBet === 0 && interRaise !== 0 && isTurn){\r\n  setPlayerMoney(playerMoney-Number(ddDD));\r\n  }else{\r\n    setPlayerMoney(playerMoney+0);\r\n  }\r\n  setIsTurn(false);\r\n});\r\nsocket.on ('xXX', ({xXX}) => {\r\n  if (interBet === 0 && interRaise !== 0 && isTurn){\r\n  setPlayerMoney(playerMoney-Number(xXX));\r\n  }else{\r\n    setPlayerMoney(playerMoney+0);\r\n  }\r\n  setIsTurn(false);\r\n});\r\nsocket.on ('bBB', ({bBB}) => {\r\n  if (interBet === 0 && interRaise !== 0 && isTurn){\r\n  setPlayerMoney(playerMoney-Number(bBB));\r\n  }else{\r\n    setPlayerMoney(playerMoney+0);\r\n  }\r\n  setIsTurn(false);\r\n});\r\n\r\nsocket.on('sB', () => {\r\n  setIsSmallBlind(true);\r\n  });\r\nsocket.on('bB', () => {\r\n  setIsBigBlind(true);\r\n  });\r\nsocket.on('skiPot', ({skiPot}) => {\r\n  setPot(Number(skiPot));\r\n  });\r\nsocket.on('lll2', ({lll2}) => {\r\n  if (isTurn){\r\n  setPlayerMoney(playerMoney-Number(lll2));\r\n  }\r\n});\r\nsocket.on('lll3', ({lll3}) => {\r\n  if (isTurn){\r\n  setPlayerMoney(playerMoney-Number(lll3));\r\n  }\r\n});\r\nsocket.on('lll35', ({lll35}) => {\r\n  if (isTurn && !playerFolded){\r\n  setPlayerMoney(playerMoney-Number(lll35));    \r\n} else if (isTurn && playerFolded) {\r\n  setPlayerMoney(playerMoney+Number(lll35));\r\n}\r\n});\r\nsocket.on('rrr3', ({rrr3}) => {\r\n  if (isTurn){\r\n  setPlayerMoney(playerMoney-Number(rrr3));\r\n  }\r\n});\r\nsocket.on('lll4', ({lll4}) => {\r\n  if (isTurn){\r\n  setPlayerMoney(playerMoney-Number(lll4));\r\n  }\r\n});\r\nsocket.on('lll22', ({lll22}) => {\r\n  if (isTurn){\r\n  setPlayerMoney(playerMoney-Number(lll22));\r\n  }\r\n});\r\nsocket.on('lll223', ({lll223}) => {\r\n  if (isTurn){\r\n  setPlayerMoney(playerMoney-Number(lll223));\r\n  }\r\n});\r\nsocket.on('preflop008', ({preflop008}) => {\r\n  if (isTurn){\r\n  setPlayerMoney(playerMoney-Number(preflop008));\r\n  }\r\n});\r\nsocket.on('preflop0082', ({preflop0082}) => {\r\n  if (isTurn){\r\n  setPlayerMoney(playerMoney-Number(preflop0082));\r\n  }\r\n});\r\nsocket.on('preflop0085', ({preflop0085}) => {\r\n  if (isTurn){\r\n  setPlayerMoney(playerMoney-Number(preflop0085));\r\n  }\r\n});\r\nsocket.on('rr2235', ({rr2235}) => {\r\n  if (isTurn){\r\n  setPlayerMoney(playerMoney-Number(rr2235));\r\n  }\r\n});\r\nsocket.on('preflop149999', ({preflop149999}) => {\r\n  if (isTurn){\r\n  setPlayerMoney(playerMoney-Number(preflop149999));\r\n  }\r\n});\r\nsocket.on('preflop31', ({preflop31}) => {\r\n  if (isTurn){\r\n  setPlayerMoney(playerMoney-Number(preflop31));\r\n  }\r\n});\r\nsocket.on('tripprefin', ({tripprefin}) => {\r\n  if (isTurn){\r\n  setPlayerMoney(playerMoney-Number(tripprefin));\r\n  }\r\n});\r\nsocket.on('preflopXX', ({preflopXX}) => {\r\n  if (isTurn){\r\n  setPlayerMoney(playerMoney-Number(preflopXX));\r\n  }\r\n});\r\nsocket.on('tgTG', ({tgTG}) => {\r\n  if (isTurn){\r\n  setPlayerMoney(playerMoney-Number(tgTG));\r\n  }\r\n});\r\nsocket.on('preflopOO', ({preflopOO}) => {\r\n  if (isTurn){\r\n  setPlayerMoney(playerMoney-Number(preflopOO));\r\n  }\r\n});\r\nsocket.on('preflop1454', ({preflop1454}) => {\r\n  if (isTurn){\r\n  setPlayerMoney(playerMoney-Number(preflop1454));\r\n  }\r\n});\r\nsocket.on('zXY', ({zXY}) => {\r\n  if (isTurn){\r\n  setPlayerMoney(playerMoney-Number(zXY));\r\n  }\r\n});\r\nsocket.on('jjII', ({jjII}) => {\r\n  if (isTurn){\r\n  setPlayerMoney(playerMoney-Number(jjII));\r\n  }\r\n});\r\nsocket.on('jjKK', ({jjKK}) => {\r\n  if (isTurn){\r\n  setPlayerMoney(playerMoney-Number(jjKK));\r\n  }\r\n});\r\nsocket.on('ccCC', ({ccCC}) => {\r\n  if (isTurn){\r\n  setPlayerMoney(playerMoney-Number(ccCC));\r\n  }\r\n});\r\nsocket.on('ccCC2', ({ccCC2}) => {\r\n  if (isTurn){\r\n  setPlayerMoney(playerMoney-Number(ccCC2));\r\n  }\r\n});\r\nsocket.on('yyTT', ({yyTT}) => {\r\n  if (isTurn){\r\n  setPlayerMoney(playerMoney-Number(yyTT));\r\n  }\r\n});\r\nsocket.on('jjKK2', ({jjKK2}) => {\r\n  if (isTurn){\r\n  setPlayerMoney(playerMoney-Number(jjKK2));\r\n  }\r\n});\r\nsocket.on('ccCC3', ({ccCC3}) => {\r\n  if (isTurn){\r\n  setPlayerMoney(playerMoney-Number(ccCC3));\r\n  }\r\n});\r\nsocket.on('yyTT33', ({yyTT33}) => {\r\n  if (isTurn){\r\n  setPlayerMoney(playerMoney-Number(yyTT33));\r\n  }\r\n});\r\nsocket.on('yyTTKK', ({yyTTKK}) => {\r\n  if (isTurn){\r\n  setPlayerMoney(playerMoney-Number(yyTTKK));\r\n  }\r\n});\r\nsocket.on('gimmeCashUpdate', () => {\r\n  socket.emit('cashUpdate', {cashUpdate: playerMoney, playerId, gameId});\r\n});\r\n\r\nsocket.on('oneChi', ({oneChi}) => {\r\n  if (isTurn){\r\n    setPlayerMoney(playerMoney-Number(oneChi));\r\n    }\r\n});\r\nsocket.on('tootsieD', ({tootsieD}) => {\r\n  if (isTurn){\r\n    setPlayerMoney(playerMoney-Number(tootsieD));\r\n    }\r\n});\r\nsocket.on('thatCase', ({thatCase}) => {\r\n  if (isTurn){\r\n    setPlayerMoney(playerMoney-Number(thatCase));\r\n    }\r\n});\r\nsocket.on('folderfourp09', ({folderfourp09}) => {\r\n  if (isTurn){\r\n    setPlayerMoney(playerMoney-Number(folderfourp09));\r\n    }\r\n});\r\nsocket.on('playerFolded', () => {\r\n  if (isTurn){\r\n    setPlayerFolded(true);\r\n    setFoldedChipsSave(playerMoney);\r\n    }\r\n});\r\nsocket.on('for4withonefold', ({for4withonefold}) => {\r\n  if (isTurn){\r\n    setPlayerMoney(playerMoney-Number(for4withonefold));\r\n    }\r\n});\r\nsocket.on('seccyBR20', ({seccyBR20}) => {\r\n  if (isTurn){\r\n    setPlayerMoney(playerMoney-Number(seccyBR20));\r\n    }\r\n});\r\nsocket.on('twoPtwoR33', ({twoPtwoR33}) => {\r\n  if (isTurn){\r\n    setPlayerMoney(playerMoney-Number(twoPtwoR33));\r\n    }\r\n});\r\nsocket.on('jjII233', ({jjII233}) => {\r\n  if (isTurn){\r\n    setPlayerMoney(playerMoney-Number(jjII233));\r\n    }\r\n});\r\nsocket.on('trippyFins', ({trippyFins}) => {\r\n  if (isTurn){\r\n    setPlayerMoney(playerMoney-Number(trippyFins));\r\n    }\r\n});\r\nsocket.on('minusDuplicate', ({gameId}) => {\r\n  socket.emit('duplicateSubtract', {gameId});\r\n});\r\nsocket.on('criTri', ({criTri}) => {\r\n  if (isTurn){\r\n    setPlayerMoney(playerMoney-Number(criTri));\r\n    }\r\n});\r\nsocket.on('raiseLimitReached', () => {\r\n  setRaiseLimitReached(true);\r\n});\r\nsocket.on('minRaise', ({minRaise}) => {\r\n    setMinRaise(Number(minRaise)+1);\r\n});\r\nsocket.on('minRaiseEqBB', ({minRaiseEqBB}) => {\r\n  setMinRaise(Number(minRaise)+1);\r\n});\r\n/*if (playerFolded && isTurn){\r\n  socket.emit('foldSkip', {gameId});\r\n};*/\r\n\r\nif (playerFolded){\r\n  setPlayerMoney(foldedChipsSave);\r\n};\r\n\r\nsocket.on('selectWinner', () => {\r\n  setStorePot(pot);\r\n  const newCombinedCards = [...playerHand, ...tableCards];\r\n  const namesForStraight = ['two','three','four','five','six','seven','eight','nine','ten','jack','queen','king','ace'];\r\n  setCombinedCards(newCombinedCards);\r\n  console.log('Combined cards:', newCombinedCards, newCombinedCards.name, combinedCards.name, combinedCards.suit);\r\n  console.log('Player hand:', playerHand);\r\n  console.log('Table cards:', tableCards);\r\n\r\n  let handScore = 0;\r\n  let twoCardScore = 0;\r\n\r\n  const playerHandCardNames = playerHand.map(card => card.name);\r\n\r\n  for (let i = 0; i < namesForStraight.length; i++){\r\n    if (playerHandCardNames.includes(namesForStraight[i])){\r\n      twoCardScore = i;\r\n    }\r\n  }\r\n\r\n\r\n  const tableCardNames = tableCards.map(card => card.name);\r\n  const tableCardSuits = tableCards.map(card => card.suit);\r\n\r\n  const tableCardNameCounts = tableCards.reduce((counts, card) => {\r\n    counts[card.name] = (counts[card.name] || 0)+1;\r\n    return counts;\r\n  }, {});\r\n  const tableCardSuitCounts = tableCards.reduce((counts, card) => {\r\n    counts[card.suit] = (counts[card.suit] || 0)+1;\r\n    return counts;\r\n  }, {});\r\n\r\n  const uniqueTableCardNames = Object.keys(tableCardNameCounts);\r\n  const uniqueTableCardSuits = Object.keys(tableCardSuitCounts);\r\n\r\n  const tablePairCardNames = Object.keys(tableCardNameCounts).filter(name => tableCardNameCounts[name] === 2);\r\n  const setTableCardNames = Object.keys(tableCardNameCounts).filter(name => tableCardNameCounts[name] === 3);\r\n  const twoPairTableCardNames = tablePairCardNames.filter(name => tableCardNameCounts[name] === 2);\r\n  const fourTableCardNames = Object.keys(tableCardNameCounts).filter(name => tableCardNameCounts[name] === 4);\r\n  const fullHousetableCardNamePairs = tablePairCardNames.filter(name => !setTableCardNames.includes(name));\r\n\r\n\r\n  const flushTableCardSuits = Object.keys(tableCardSuitCounts).filter(suit => tableCardSuitCounts[suit] === 5);\r\n// top = table //////////////////////////// bottom = combined /////////////////////////////////////////////////////////////\r\n  \r\n\r\n\r\n  const cardNames = newCombinedCards.map(card => card.name);\r\n  const cardSuits = newCombinedCards.map(card => card.suit);\r\n\r\n  const cardNameCounts = newCombinedCards.reduce((counts, card) => {\r\n    counts[card.name] = (counts[card.name] || 0)+1;\r\n    return counts;\r\n  }, {});\r\n  const cardSuitCounts = newCombinedCards.reduce((counts, card) => {\r\n    counts[card.suit] = (counts[card.suit] || 0)+1;\r\n    return counts;\r\n  }, {});\r\n\r\n    const uniqueCardNames = Object.keys(cardNameCounts);\r\n\r\n    const pairCardNames = Object.keys(cardNameCounts).filter(name => cardNameCounts[name] === 2);\r\n    const setCardNames = Object.keys(cardNameCounts).filter(name => cardNameCounts[name] === 3);\r\n    const twoPairCardNames = pairCardNames.filter(name => cardNameCounts[name] === 2);\r\n    const fourCardNames = Object.keys(cardNameCounts).filter(name => cardNameCounts[name] === 4);\r\n    const fullHouseCardNamePairs = pairCardNames.filter(name => !setCardNames.includes(name));\r\n\r\n    const flushCardSuits = Object.keys(cardSuitCounts).filter(suit => cardSuitCounts[suit] === 5);\r\n    const flushCardSuitsplusone = Object.keys(cardSuitCounts).filter(suit => cardSuitCounts[suit] === 6);\r\n    const flushCardSuitsplustwo = Object.keys(cardSuitCounts).filter(suit => cardSuitCounts[suit] === 7);\r\n\r\n\r\n    const pairCardName = playerHand.map(card => card.name).find(name => pairCardNames.includes(name));\r\n    const pairIndex = namesForStraight.indexOf(pairCardName);\r\n\r\n    let flush = false;\r\n\r\n    let pair = false;\r\n    let twopair = false;\r\n    let set = false;\r\n    let fourofakind = false;\r\n    let straightflush = false;\r\n    let royalflush = false;\r\n\r\n\r\n\r\n    let straight = false;\r\n    const sortedNamesForStraight = namesForStraight.slice().sort();\r\n    \r\n    for (let i = 0; i <= cardNames.length - 5; i++) {\r\n      const subList = cardNames.slice(i, i + 5);\r\n    \r\n      const sortedSubList = subList.slice().sort();\r\n    \r\n      const isStraight = sortedSubList.every((name, index) => name === sortedNamesForStraight[index]);\r\n    \r\n      if (isStraight) {\r\n        straight = true;\r\n        break;\r\n      }\r\n    }\r\nconst isFullHousePossible = (fullHouseCardNamePairs.length === 1 && setCardNames.length > 0 && fullHousetableCardNamePairs.length === 0) || (fullHouseCardNamePairs.length === 2 && setCardNames.length > 0 && fullHousetableCardNamePairs.length === 1);\r\n\r\nif (pairCardNames.length === 1 ){\r\n  //pair\r\n  pair = true;\r\n  handScore = 300+pairIndex;\r\n}\r\n\r\nif (twoPairCardNames.length === 2){\r\n  //two pairs\r\n  twopair = true;\r\n  handScore = 325+twoCardScore;\r\n}\r\n\r\nif (setCardNames.length === 1 && setTableCardNames < 1){\r\n  //set\r\n  set = true;\r\n  handScore = 350+twoCardScore;\r\n}\r\nelse if (setCardNames.length === 2 && setTableCardNames < 2){\r\n  //set\r\n  set = true;\r\n  handScore = 350+twoCardScore;\r\n}\r\n\r\nif (straight){\r\n  //straight\r\n  handScore = 375+twoCardScore;\r\n}\r\n\r\nif ((flushCardSuits.length === 1 && flushTableCardSuits < 1) || (flushCardSuitsplusone.length === 1 && flushTableCardSuits === 1 || flushCardSuitsplusone.length === 1 && flushTableCardSuits === 0) || (flushCardSuitsplustwo.length === 1 && flushTableCardSuits === 1 || flushCardSuitsplustwo.length === 1 && flushTableCardSuits === 0)){\r\n  //flush\r\n  flush = true;\r\n  handScore = 400+twoCardScore;\r\n}\r\n\r\nif (isFullHousePossible){\r\n  //full house\r\n  handScore = 425+twoCardScore;\r\n}\r\nif (fourCardNames.length === 1 && fourTableCardNames !== 1){\r\n  //four of a kind\r\n  fourofakind = true;\r\n  handScore = 450+twoCardScore;\r\n}\r\n\r\nif (straight && flush){\r\n  //straight flush \r\n  straightflush = true;\r\n\r\n  handScore = 475+twoCardScore;\r\n}\r\n\r\nif (straight && flush && cardNames.includes('ten') && cardNames.includes('jack') &&\r\ncardNames.includes('queen') && cardNames.includes('king') && cardNames.includes('ace')){\r\n  //royal flush \r\nroyalflush = true;\r\nhandScore = 500+twoCardScore;\r\n}\r\n\r\nif (!pair && !twopair && !set && !straight && !flush && !isFullHousePossible && !fourofakind && !straightflush && !royalflush){\r\n  handScore = 0+twoCardScore;\r\n}\r\n\r\n  console.log(`handscore : ${handScore}`);\r\n  setMyHandQuant(handScore);\r\n  console.log(`myhandquant inside handscore DecompressionStreammining func ${myHandQuant}`);\r\n  socket.emit('sendHandScore', { gameId, handScore });\r\n  \r\n \r\n});\r\nsocket.on('determineWinner', ({highestHandScore, numPlayersWithHighestScore}) => {\r\n\r\n\r\n  let allHands = Array(playersInGame.length).fill([]);\r\n  setEveryonesHand(allHands);\r\n  \r\n  socket.emit('winnerIntermed', {gameId, highestHandScore, numPlayersWithHighestScore, playerHand, playerId}); \r\n});\r\n\r\n\r\nsocket.on('winningHandScore', ({highestHandScore, numPlayersWithHighestScore, playerHand, playerI}) => {\r\n\r\n  console.log(\"Before updating everyonesHand\");\r\n  console.log(`playersInGame: ${playersInGame}`);\r\n  console.log(`playerId: ${playerId}`);\r\n  console.log(`playerI: ${playerI}`);\r\n  console.log(`everyonesHand before update: ${everyonesHand}`);\r\n\r\n  let updatedEveryonesHand = [...everyonesHand];\r\nconst playerIndex = playersInGame.indexOf(playerI);\r\nupdatedEveryonesHand[playerIndex] = playerHand;\r\nsetEveryonesHand(updatedEveryonesHand);\r\n\r\nconsole.log(`upd evrns hnd ${updatedEveryonesHand}`);\r\nconsole.log(`everyonesHand before update: ${everyonesHand}`);\r\n\r\n\r\n  setShowOtherCards(true);\r\n\r\n  console.log(`pm before applying winnings: ${playerMoney}`);\r\n  console.log(`myHandQuant: ${myHandQuant}`);\r\n  console.log(`highestHandScore: ${highestHandScore}`);\r\n  console.log(`numPlayersWithHighestScore: ${numPlayersWithHighestScore}`);\r\n  if (!playerFolded && myHandQuant === Number(highestHandScore) && Number(numPlayersWithHighestScore) === 1){\r\n    setPlayerMoney(playerMoney + (storePot/Number(numPlayersWithHighestScore)));\r\n    console.log(`pm after applying winnings: ${playerMoney}`);\r\n  }\r\n  if (!playerFolded && myHandQuant === Number(highestHandScore) && Number(numPlayersWithHighestScore) === 2 && playersInGame.length === 2){\r\n    setPlayerMoney(playerMoney + (storePot/2));\r\n  }\r\n  console.log(highestHandScore);\r\n  console.log(`storepot: ${storePot}`);\r\n\r\n});\r\n\r\nsocket.on('newHand', () => {\r\n  socket.emit('gameSequence2', { gameId });\r\n  setRaiseLimitReached(false);\r\n  setPlayerFolded(false);\r\n  setInput2Interacted(false);\r\n  socket.emit('requestCashUpdate', {gameId}); \r\n  setPlayerHand([]);\r\n  setCheckNoShow(false);\r\n  setBetResBoolean(false);\r\n  setClientBetAmount(0);\r\n  setClientRaiseAmount(0);\r\n  setPot(0);\r\n  setTableCards([]);\r\n  setCards([]);\r\n  setRunIndex(0);\r\n  setRunIndex2(0);\r\n  setRunIndex3(0);\r\n  setNoLimitIndex(0);\r\n  setMultiRaise(false);  \r\n  setInputInteracted(false);\r\n  setInterBet(0);\r\n  setPlusBool(false);\r\n  setInterRaise(0);\r\n  setRaised(false);\r\n  setJustOneRaise(false);\r\n  setSecondRaise(false);\r\n  setAbstractRaise(0);\r\n  setMinusBetBoolean(false);\r\n  setBrSecRaise(0);\r\n  setLastBetRezz(false);\r\n  setIsSmallBlind(true);\r\n  setIsBigBlind(true);\r\n  setStopB1(0);\r\n  setStopB2(0);\r\n  setTitkiStopper(0);\r\n  setStopper99(0);\r\n  setTurnCount(0);\r\n  setTurnCount2(0);\r\n  setTurnCount3(0);\r\n});\r\n\r\nwindow.addEventListener('beforeunload', function(event) {\r\n  // Emit an event to the server indicating the player is leaving the game\r\n  socket.emit('playerLeaving', { gameId, playerId });\r\n});\r\n\r\nsocket.emit('newPlayerChips', {newPlayerChips: playerMoney, gameId, whoseChips:playersInGame.indexOf(playerId)});\r\nsocket.on('newChipsRightBack', ({ newChipsRightBack, whosMoney }) => {\r\n    setEveryonesChips((prevChips) => {\r\n      const updatedChips = [...prevChips];\r\n      const playerIndex = Number(whosMoney);\r\n      updatedChips[playerIndex] = newChipsRightBack;\r\n      return updatedChips;\r\n    });\r\n    console.log(`everyones chips array: ${everyonesChips}`);\r\n});\r\nconst playSound = (soundUrl) => {\r\n  const audio = new Audio(soundUrl);\r\n  audio.play();\r\n};\r\n\r\nsocket.on('emitFoldSound', () => {\r\n  playSound(foldSound);\r\n});\r\nsocket.on('emitCheckSound', () => {\r\n  playSound(checkSound);\r\n});\r\nsocket.on('emitBetResSound', () => {\r\n  playSound(betSound);\r\n});\r\nsocket.on('emitBetSound', () => {\r\n  playSound(betSound);\r\n});\r\nsocket.on('payTheNonFolder', () => {\r\n  if (!playerFolded){\r\n    setPlayerMoney(playerMoney+pot);\r\n  }\r\n});\r\n\r\n\r\n      return () => {\r\n        socket.off('gameUpdated', handleGameUpdated);\r\n        socket.off('noCheck');\r\n        socket.off('gameStarted');\r\n        socket.off('cardsDealt');\r\n        socket.off('flopDealt');\r\n        socket.off('turnDealt');\r\n        socket.off('riverDealt');\r\n        socket.off('updateTurn');\r\n        socket.off('playersReady');\r\n        socket.off('chipsDealt');\r\n        socket.off('betMade');\r\n        socket.off('potUpdated');\r\n        socket.off('raiseEmitted');\r\n        socket.off('dealerEmitted');\r\n        socket.off('interRaiseBetres');\r\n        socket.off('didRaise');\r\n        socket.off('onlyOneRaise');\r\n        socket.off('twoRaise');\r\n        socket.off('raisecTwo');\r\n        socket.off('minusBet');\r\n        socket.off('lastBetRezzy');\r\n        socket.off('seccyBR'); \r\n        socket.off('upRaise');\r\n        socket.off('chipsMinus');\r\n        socket.off('chipsMinus2');\r\n        socket.off('twoPtwoR');\r\n        socket.off('tootsiePlus');\r\n        socket.off('chippyMin');\r\n        socket.off('cPMM');\r\n        socket.off('zzTT');\r\n        socket.off('vvPP');\r\n        socket.off('aaTT');\r\n        socket.off('ppPP');\r\n        socket.off('ddDD');\r\n        socket.off('hhGG');\r\n        socket.off('chippyM');\r\n        socket.off('xXX');\r\n        socket.off('bBB');\r\n        socket.off('sB');\r\n        socket.off('bB');\r\n        socket.off('updateTurnSmallBlind');\r\n        socket.off('updateTurnBigBlind');\r\n        socket.off('updateTurnAfterBlinds');\r\n        socket.off('newPot2');\r\n        socket.off('skiPot');\r\n        socket.off('lll2');\r\n        socket.off('lll3');\r\n        socket.off('rrr3');\r\n        socket.off('lll4');\r\n        socket.off('lll22');\r\n        socket.off('lll223');\r\n        socket.off('preflop008');\r\n        socket.off('preflop0082');\r\n        socket.off('preflop0085');\r\n        socket.off('preflop149999');\r\n        socket.off('rr2235');\r\n        socket.off('preflop31');\r\n        socket.off('tripprefin');\r\n        socket.off('preflopXX');\r\n        socket.off('tgTG');\r\n        socket.off('preflopOO');\r\n        socket.off('preflop1454');\r\n        socket.off('zXY');\r\n        socket.off('jjII');\r\n        socket.off('jjKK');\r\n        socket.off('ccCC');\r\n        socket.off('ccCC2');\r\n        socket.off('yyTT');\r\n        socket.off('jjKK2');\r\n        socket.off('ccCC3');\r\n        socket.off('yyTT33');\r\n        socket.off('yyTTKK');\r\n        socket.off('newHand');\r\n        socket.off('titkiBig');\r\n        socket.off('onlyBetRes');\r\n        socket.off('goFlop');\r\n        socket.off('goTurn');\r\n        socket.off('goRiver');\r\n        socket.off('gimmeCashUpdate');\r\n        socket.off('betRezzySecRaise');\r\n        socket.off('potPlus'); \r\n        socket.off('secSEC');\r\n        socket.off('oneChi');\r\n        socket.off('tootsieD');\r\n        socket.off('thatCase');\r\n        socket.off('playerFolded');\r\n        socket.off('betAfterFold');\r\n        socket.off('betAfterFold2');\r\n        socket.off('folderfourp09');\r\n        socket.off('for4withonefold');\r\n        socket.off('seccyBR20');\r\n        socket.off('lll35');\r\n        socket.off('twoPtwoR33');\r\n        socket.off('jjII233');\r\n        socket.off('trippyFins');\r\n        socket.off('criTri');\r\n        socket.off('duplicateSubtract');\r\n        socket.off('minRaise');\r\n        socket.off('raiseLimitReached');\r\n        socket.off('minRaiseEqBB');\r\n        socket.off('newChipsRightBack');\r\n        socket.off('emitBetSound');\r\n        socket.off('emitBetResSound');\r\n        socket.off('emitCheckSound');\r\n        socket.off('emitFoldSound');\r\n        socket.off('winnerSelected');\r\n        socket.off('selectWinner');\r\n        socket.off('payTheNonFolder');\r\n        socket.off('winningHandScore');\r\n        socket.off('gameCardsDealt');\r\n        socket.off('determineWinner');\r\n      };\r\n    }, [gameId, socket, turnCount, playerId, pot, cards, runIndex, dealer, myHandQuant, storePot, everyonesHand]);\r\n  \r\n\r\n    const handlePlayerAction = (actionType, betAmount, event, clientBetAmount) => {\r\n      \r\n      const playerId = localStorage.getItem('playerId');\r\n    \r\n      // Ensure betAmount is a number\r\n      const numericBetAmount = Number(betAmount);\r\n      const numericRaiseAmount = Number(clientRaiseAmount);\r\n      // Ensure playerMoney and pot are treated as numbers\r\n      const numericPlayerMoney = Number(playerMoney);\r\n      const numericPot = Number(pot);\r\n      const updatedChips = numericPlayerMoney - numericBetAmount;\r\n      let actionPayload = { gameId, playerId, action: actionType, betAmount: numericBetAmount };\r\n\r\n\r\n      if (isTurn && (actionType === 'bet') && numericBetAmount > 0 && betAmount>0 && betAmount<=playerMoney && numericBetAmount <= numericPlayerMoney) {\r\n        setNoLimitIndex(noLimitIndex+1);\r\n        setClientBetAmount(numericBetAmount);\r\n        setPlayerMoney(numericPlayerMoney-numericBetAmount);\r\n        setInterBet(numericBetAmount);\r\n        socket.emit('betSound', {gameId}); \r\n      }\r\n      else if (isTurn && (actionType === 'raise') && numericBetAmount > 0 && betAmount>0 && betAmount<=playerMoney && numericBetAmount <= numericPlayerMoney) {\r\n        setNoLimitIndex(noLimitIndex+1);\r\n\r\n        if(minusBetBoolean === true){\r\n          setPlayerMoney(numericPlayerMoney-numericBetAmount+interBet);\r\n          console.log('c1');\r\n        }\r\n        else{\r\n        setClientBetAmount(numericBetAmount);\r\n        setInputInteracted(false);\r\n        setPlayerMoney(numericPlayerMoney-numericBetAmount);\r\n        setInterRaise(numericBetAmount);console.log('c2');\r\n        }\r\n        socket.emit('betSound', {gameId}); \r\n      }\r\n      \r\n      else if (isTurn && actionType === 'betres') {\r\n        console.log(`lastbetrezz: ${lastBetRezz}`);\r\n        if (raised && justOneRaise===true && secondRaise === false){\r\n        if (interBet>0){\r\n        setClientBetAmount(numericBetAmount);\r\n        setPlayerMoney(numericPlayerMoney-numericBetAmount+interBet);\r\n        setPlusBool(true);\r\n        console.log ('r1');\r\n        }else if(interRaise>0){\r\n        setClientBetAmount(numericBetAmount);\r\n        setPlayerMoney(numericPlayerMoney-numericBetAmount+interRaise);\r\n        setPlusBool(true);\r\n        console.log ('r2');\r\n        }\r\n        else {\r\n          setClientBetAmount(numericBetAmount);\r\n          setPlayerMoney(numericPlayerMoney-numericBetAmount);\r\n          setPlusBool(true);\r\n          console.log ('r2.5');\r\n        }\r\n        }\r\n          else if (raised && secondRaise === true && justOneRaise === true){\r\n          if (interBet>0){\r\n          setClientBetAmount(numericBetAmount);\r\n          setPlayerMoney(numericPlayerMoney-numericBetAmount+interBet);\r\n          setPlusBool(true);\r\n          console.log ('r3');\r\n          }\r\n          else if(interRaise>0 && minusBetBoolean===false){\r\n          setClientBetAmount(numericBetAmount);\r\n          setPlayerMoney(numericPlayerMoney-abstractRaise+interRaise);\r\n          setPlusBool(true);\r\n          console.log ('r4');\r\n          }\r\n          else if(interRaise>0 && minusBetBoolean===true){\r\n          setPlayerMoney(numericPlayerMoney-brSecRaise+interRaise);\r\n          setPlusBool(true);\r\n          console.log ('r4.5');\r\n          console.log(abstractRaise);console.log(numericBetAmount);console.log(interRaise);\r\n          }\r\n        }\r\n        else if(SB>0){\r\n          setPlayerMoney(playerMoney-numericBetAmount+SB);\r\n          let potski = pot - SB;\r\n          socket.emit('potski', {potski, gameId});\r\n          setSB(0);\r\n        }\r\n        else{\r\n        setClientBetAmount(numericBetAmount);\r\n        setPlayerMoney(numericPlayerMoney-numericBetAmount);\r\n        setInputInteracted(false);\r\n        setInput2Interacted(false);\r\n        console.log ('r5');\r\n      }\r\n      socket.emit('betResSound', {gameId}); \r\n  }\r\n      else if (isTurn && actionType === 'check'){\r\n        socket.emit('checkSound', {gameId}); \r\n    }\r\n    else if (actionType === 'check'){\r\n      socket.emit('checkSound', {gameId}); \r\n    }\r\n    else if (isTurn && actionType === 'fold'){\r\n      socket.emit('foldSound', {gameId});  \r\n    }\r\n    socket.emit('playerAction', actionPayload);  \r\n    setBetDraggingValue(0);\r\n    setRaiseDraggingValue(0);\r\n};\r\n    \r\nconst markPlayerReady = () => {\r\n  socket.emit('playerReady', { gameId, playerId });\r\n};\r\nconst handleInput = (e) => {\r\n  setBetDraggingValue(Number(e.target.value));\r\n};\r\nconst copyToClipboard = () => {\r\n  navigator.clipboard.writeText(window.location.href);\r\n  setCopied(true);\r\n  setTimeout(() => {\r\n    setCopied(false);\r\n  }, 500);\r\n};    \r\n  \r\n\r\n    return (\r\n      <div className=\"floor\">\r\n      {!gameStarted &&(\r\n      <button className=\"invite-link\" onClick={copyToClipboard}>\r\n      <h1>{copied ? 'Copied!' : 'Copy Invite Link'}</h1>\r\n      </button>\r\n      )}\r\n      <div className=\"poker-table\"><div className=\"tablecloth\"></div></div>\r\n        {playersInGame.map((_, index) => (\r\n        <div key={index} className={`player-${index}`} style={{ width: '70px', height: '120px', backgroundColor: 'black', margin: '10px', display: 'flex', flexDirection: 'column', justifyContent: 'center', textAlign: 'center' }}>\r\n        {index === dealer && <p className=\"dealer-chip\">Dealer</p>}\r\n        {index === playersInGame.indexOf(playerId) && <p className=\"you\">You</p>}\r\n        {<p className=\"chips\">$ {everyonesChips[index]}</p>}\r\n        </div>\r\n        ))}\r\n        {!gameStarted && playersInGame.length>=2 &&(\r\n        <>\r\n        <button\r\n        className={` ${playerMarkedReady ? 'player-ready' : 'start-game-button'}`}\r\n        onClick={() => markPlayerReady()}\r\n        >\r\n        {playersInGame.length>=2 &&(\r\n        <h1>Start Game <span className=\"howmany-ready\">{gameStatus}</span>\r\n        </h1>\r\n        )}\r\n        </button>\r\n        </>\r\n        )}\r\n          \r\n          <div className=\"pot\"><p>Pot: ${Number(pot)}</p></div>\r\n          <div className={`hand hand-${playersInGame.indexOf(playerId)}`}>\r\n          {/* mapping current player's cards */}\r\n          {!playerFolded && playerHand.map((card, index) => (\r\n            <img key={index} className='cards' src={cardImages[`${card.name}_${card.suit}`]} alt={`${card.name} of ${card.suit}`} />  \r\n          ))}\r\n         {/* {showOtherCards && ( everyonesHand.map((hand, playerIndex) => (\r\n  // Render cards for each player\r\n        <div key={playerIndex} className={`ncp-${playerIndex}`}>\r\n  \r\n          {hand.map((card, index) => (\r\n            <img\r\n              key={index}\r\n              className='cards'\r\n              src={cardImages[`${card.name}_${card.suit}`]}\r\n              alt={`${card.name} of ${card.suit}`}\r\n            />\r\n          ))}\r\n        </div>\r\n      )))}*/}\r\n        </div>\r\n        {/* mapping card backs for non-current players */}\r\n        <div className=\"ncp-container\">\r\n          {( playersInGame.map((_, index) => (\r\n            index !== playersInGame.indexOf(playerId) && (\r\n              <div className={`ncp-${index}`}>\r\n              <img\r\n                key={index}\r\n                src={cardBack}\r\n                className=\"ncp\"\r\n                alt=\"back of the card\"\r\n              ></img>\r\n              <img\r\n                key={index}\r\n                src={cardBack}\r\n                className=\"ncp\"\r\n                alt=\"back of the card\"\r\n              ></img>\r\n              </div>\r\n            )\r\n          )))}\r\n        </div>\r\n        \r\n\r\n        {isTurn &&(\r\n        <div className=\"action-choices\">\r\n        {!playerFolded && !checkNoShow && (\r\n        <button className=\"check\" onClick={() => handlePlayerAction('check')}><p>Check</p></button>\r\n        )}\r\n        {!playerFolded && !betResBoolean &&(\r\n          <div>\r\n          <div className=\"number-dragging\"><p>{inputInteracted || input2Interacted ? betDraggingValue : `Drag to Bet`}</p></div>\r\n        <input\r\n          className=\"draggable\"\r\n          type=\"range\"\r\n          min={playerMoney<25 ? 0 : 25}\r\n          max={playerMoney}\r\n          value={clientBetAmount}\r\n          onInput={handleInput}\r\n          onChange={(e) => {setClientBetAmount(Number(e.target.value))\r\n                            setInput2Interacted(true);\r\n                    }}\r\n          placeholder=\"Bet Amount\"\r\n        />\r\n        </div>\r\n        )}\r\n        {!playerFolded && betResBoolean && !multiRaise && !inputInteracted && (\r\n        <button className=\"check\" onClick={() => handlePlayerAction('betres', clientBetAmount)}><p>Bet: ${clientBetAmount}</p></button>\r\n        )}\r\n        {!playerFolded && betResBoolean && multiRaise && !inputInteracted && (\r\n        <button className=\"check\" onClick={() => handlePlayerAction('betres', clientBetAmount)}><p>Bet: ${clientBetAmount}</p></button>\r\n        )}\r\n        {!playerFolded && !betResBoolean && (\r\n        <button className=\"bet\" onClick={() => handlePlayerAction('bet', clientBetAmount)}><p>Bet</p></button>\r\n        )}\r\n        {!playerFolded && betResBoolean && !raiseLimitReached &&(\r\n          <div>\r\n          <div className=\"number-dragging\"><p>{betDraggingValue}</p></div>\r\n        <input\r\n          className=\"draggable\"\r\n          type=\"range\"\r\n          value={Number(clientBetAmount)}\r\n          min={playerMoney > minRaise ? minRaise : playerMoney} \r\n          max={playerMoney}\r\n          onInput={handleInput}\r\n          onChange={(e) => {\r\n            setClientBetAmount(Number(e.target.value));\r\n            setInputInteracted(true); // Set to true on change\r\n          }}\r\n          onClick={() => setInputInteracted(true)} // Set to true on click\r\n          placeholder=\"Raise Amount\"\r\n        /></div>\r\n        )}\r\n        {!playerFolded && betResBoolean && inputInteracted && (\r\n        <button className=\"bet\" onClick={() => handlePlayerAction('raise', Number(clientBetAmount))}><p>Raise</p></button>\r\n        )}\r\n        {!playerFolded &&(\r\n        <button className=\"fold\" onClick={() => handlePlayerAction('fold')}><p>Fold</p></button>\r\n        )}\r\n        </div>\r\n      )}\r\n      {!isTurn && (\r\n        <div></div>\r\n      )}\r\n      \r\n\r\n        <div className=\"flop\">\r\n          {tableCards.map((card, index) => (\r\n            <img key={index} src={cardImages[`${card.name}_${card.suit}`]} alt={`${card.name} of ${card.suit}`} />\r\n          ))}\r\n        </div>\r\n        </div>\r\n    );\r\n  };\r\n  \r\n\r\nexport default Game;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}